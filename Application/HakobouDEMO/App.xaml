<Application x:Class="Hakobo.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ctls="clr-namespace:KyoeiSystem.Framework.Windows.Controls;assembly=KyoeiSystem.Framework.Windows.Controls"
             Startup="StartupMain" >
  <Application.Resources>

    <!--
    アプリケーション全体で共通のスタイル定義を行う。
    ここの定義を変更すると、全体に影響する。
    -->

    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <!--<Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>-->
    <Color x:Key="ControlLightColor">#33ff33</Color>
    <Color x:Key="ControlMediumColor">#66cc66</Color>
    <Color x:Key="ControlDarkColor">#663366</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
      <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
      <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
      <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
      <LinearGradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#000000FF"
                    Offset="0" />
          <GradientStop Color="#600000FF"
                    Offset="0.4" />
          <GradientStop Color="#600000FF"
                    Offset="0.6" />
          <GradientStop Color="#000000FF"
                    Offset="1" />
        </GradientStopCollection>
      </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--<BooleanToVisibilityConverter x:Key="b2v"/>-->

    <!-- TextBoxフォーカス時のフィールドの背景色指定と文字の選択範囲の背景色指定 -->
    <!-- 下記のスタイルのSelectionOpacityは選択範囲の背景色指定の透明度なので、1にすると文字が全く見えなくなる -->
    <!--<Style TargetType="{x:Type TextBox}">
      <Setter Property="SelectionBrush" Value="Blue" />
      <Setter Property="SelectionOpacity" Value="0.4" />
      <Style.Triggers>
        <Trigger Property="IsFocused" Value="true">
          <Setter Property="Background" Value="GreenYellow" />
        </Trigger>
        <Trigger Property="IsFocused" Value="false">
          <Setter Property="Background" Value="White" />
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
      <Setter Property="SelectionBrush" Value="Blue" />
      <Setter Property="SelectionOpacity" Value="0.4" />
      <Style.Triggers>
        <Trigger Property="IsFocused" Value="true">
          <Setter Property="Background" Value="GreenYellow" />
        </Trigger>
        <Trigger Property="IsFocused" Value="false">
          <Setter Property="Background" Value="White" />
        </Trigger>
      </Style.Triggers>
    </Style>-->

    <Style x:Key="CaptionButtonStyleKey" TargetType="{x:Type Button}">
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="Foreground" Value="White" />
      <Setter Property="FontFamily" Value="Marlett"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Margin" Value="2" />
      <Setter Property="Padding" Value="1" />
      <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="True">
              <Border.Effect>
                <DropShadowEffect Opacity="0"/>
              </Border.Effect>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      </DoubleAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="border">
                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                      </ColorAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="border">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <!-- ■ 各Windowのパターン毎のスタイルテンプレート -->

    <!-- メニュー画面用 -->
    <Style x:Key="MenuWindowStyle" TargetType="Window">
      <Setter Property="Window.Icon" Value="Resources\kyoei.ico" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Window">
            <Grid Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid  Grid.Row="0" Height="0">
                <Label Foreground="White"
                       Content="{Binding WindowTitle, Mode=OneWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                <StackPanel Orientation="Horizontal" Margin="2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top">
                  <Button Content="0" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding CloseCommand}"/>
                  <Button Content="1" Style="{DynamicResource CaptionButtonStyleKey}" />
                  <Button Content="2" Style="{DynamicResource CaptionButtonStyleKey}" />
                  <Button Content="r" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding CloseCommand}"/>
                </StackPanel>
              </Grid>

              <!-- ヘッダー部 -->
              <Grid Grid.Row="1">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#3e62ad" Offset="0" />
                  </LinearGradientBrush>
                </Grid.Background>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                </StackPanel>
              </Grid>
              <!-- コンテンツ部分 -->
              <Border Grid.Row="2" Background="{TemplateBinding Background}">
                <ContentPresenter />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- スタートアップ画面用 -->
    <Style x:Key="StartupWindow" TargetType="Window">
      <Setter Property="Window.Icon" Value="Resources\kyoei.ico" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Window">
            <Grid Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <!-- ヘッダー部 -->
              <Grid Grid.Row="0">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#FFFFF8B4" Offset="0" />
                    <GradientStop Color="#FF18FF42" Offset="1" />
                  </LinearGradientBrush>
                </Grid.Background>
                <!-- アプリケーションのタイトルと -->
                <TextBlock Text="Startup" Foreground="#FF0B00F0" FontWeight="Normal" FontSize="24" Margin="5"/>
                <!-- 共通で使用するボタンを置く -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                </StackPanel>
              </Grid>
              <!-- コンテンツ部分 -->
              <Border Grid.Row="1" Background="{TemplateBinding Background}">
                <ContentPresenter />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <!-- ログイン画面用 -->
    <Style x:Key="LoginWindow" TargetType="Window">
      <Setter Property="Window.Icon" Value="Resources\kyoei.ico" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Window">
            <Grid Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <!-- ヘッダー部 -->
              <Grid Grid.Row="0">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#3b5998" Offset="0" />
                    <!--<GradientStop Color="LightBlue" Offset="1" />-->
                  </LinearGradientBrush>
                </Grid.Background>
                <!-- アプリケーションのタイトルと -->
                <TextBlock Text="{Binding Path=Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"  Foreground="White" FontSize="20" Margin="5"/>
                <!-- 共通で使用するボタンを置く -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                </StackPanel>
              </Grid>
              <!-- コンテンツ部分 -->
              <Border Grid.Row="1" Background="{TemplateBinding Background}">
                <ContentPresenter />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- 20150807 wada add ライセンス認証ログイン画面用 -->
    <Style x:Key="LicenseLoginWindow" TargetType="Window">
      <Setter Property="Icon" Value="Resources\kyoei.ico" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Window">
            <Grid Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <!-- ヘッダー部 -->
              <Grid Grid.Row="0">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#3b5998" Offset="0" />
                    <!--<GradientStop Color="LightBlue" Offset="1" />-->
                  </LinearGradientBrush>
                </Grid.Background>
                <!-- アプリケーションのタイトルと -->
                <TextBlock Text="ライセンス認証LOGIN"  Foreground="White" FontSize="20" Margin="5"/>
                <!-- 共通で使用するボタンを置く -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                </StackPanel>
              </Grid>
              <!-- コンテンツ部分 -->
              <Border Grid.Row="1" Background="{TemplateBinding Background}">
                <ContentPresenter />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- 各種KEY変換 -->
    <Style x:Key="KeyChageWindow" TargetType="Window">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Window">
            <Grid Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <!-- ヘッダー部 -->
              <Grid Grid.Row="0">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#3e62ad" Offset="0" />
                  </LinearGradientBrush>
                </Grid.Background>
                <!-- アプリケーションのタイトルと -->
                <TextBlock Text="各種KEY変換" Foreground="White" FontWeight="Normal" FontSize="24" Margin="5"/>
                <!-- 共通で使用するボタンを置く -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                </StackPanel>
              </Grid>
              <!-- コンテンツ部分 -->
              <Border Grid.Row="1" Background="{TemplateBinding Background}">
                <ContentPresenter />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- ★支払先集計★ -->
    <Style x:Key="SHR04010Window" TargetType="Window">
      <Setter Property="Window.Icon" Value="Resources\kyoei.ico" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Window">
            <Grid Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <!-- ヘッダー部 -->
              <Grid Grid.Row="0">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#FFFFF8B4" Offset="0" />
                    <GradientStop Color="#FF18FF42" Offset="1" />
                  </LinearGradientBrush>
                </Grid.Background>
                <!-- アプリケーションのタイトルと -->
                <TextBlock Text="★支払先集計★" Foreground="#FF0B00F0" FontWeight="Normal" FontSize="24" Margin="5"/>
                <!-- 共通で使用するボタンを置く -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                </StackPanel>
              </Grid>
              <!-- コンテンツ部分 -->
              <Border Grid.Row="1" Background="{TemplateBinding Background}">
                <ContentPresenter />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- マスターメンテ画面用 -->
    <Style x:Key="MasterMaintenanceWindowStyle" TargetType="Window">
      <Setter Property="Window.Icon" Value="Resources\kyoei.ico" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Window">
            <Grid Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <!-- ヘッダー部 -->
              <Grid Grid.Row="0">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#FFF3BF9B" Offset="0" />
                    <GradientStop Color="#FFC3591D" Offset="1" />
                  </LinearGradientBrush>
                </Grid.Background>
                <!-- アプリケーションのタイトルと -->
                <TextBlock Text="{Binding Path=WindowTitle}" Foreground="#FF0B00F0" FontWeight="Normal" FontSize="24" Margin="5"/>
              </Grid>
              <!-- コンテンツ部分 -->
              <Border Grid.Row="1" Background="{TemplateBinding Background}">
                <ContentPresenter />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- 帳票プレビュー画面用 -->
    <Style x:Key="ReportPreviewStyle" TargetType="Window">
      <Setter Property="Window.Icon" Value="Resources\kyoei.ico" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Window">
            <Grid Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid Grid.Row="0">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#FF896CFF" Offset="0" />
                    <GradientStop Color="#FF210096" Offset="1" />
                  </LinearGradientBrush>
                </Grid.Background>
                <TextBlock Text="{Binding Path=ReportName}" Foreground="#FF0B00F0" FontWeight="Normal" FontSize="24" Margin="5"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                  <!--<Button MinWidth="50" Content="{Binding SaveButton.Label.Value}" Command="{Binding SaveButton.Command}" Margin="2.5"/>
                  <Button MinWidth="50" Content="{Binding PrintButton.Label.Value}" Command="{Binding PrintButton.Command}" Margin="2.5"/>
                  <Button MinWidth="50" Content="{Binding CloseButton.Label.Value}" Command="{Binding CloseButton.Command}" Margin="2.5"/>-->
                  <Button MinWidth="50" Content="保存" Command="{Binding SaveButton.Command}" Margin="5"/>
                  <Button MinWidth="50" Content="印刷" Command="{Binding PrintButton.Command}" Margin="5"/>
                  <Button MinWidth="50" Content="閉じる" Command="{Binding CloseButton.Command}" Margin="5"/>
                </StackPanel>
              </Grid>
              <!-- コンテンツ部分 -->
              <Border Grid.Row="1" Background="{TemplateBinding Background}">
                <ContentPresenter />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- リボンボタン付の画面用 -->
    <Style x:Key="RibbonWindowStyle" TargetType="RibbonWindow">
      <Setter Property="Icon" Value="Resources\kyoei.ico" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Window">
            <Grid Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <!-- ヘッダー部 -->
              <Grid Grid.Row="0">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#FFFFF8B4" Offset="0" />
                    <GradientStop Color="#FF18FF42" Offset="1" />
                  </LinearGradientBrush>
                </Grid.Background>
                <!-- アプリケーションのタイトルと -->
                <TextBlock Text="{Binding Path=WindowTitle}" Foreground="#FF0B00F0" FontWeight="Normal" FontSize="24" Margin="5"/>
                <!-- 共通で使用するボタンを置く -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                </StackPanel>
              </Grid>
              <!-- コンテンツ部分 -->
              <Border Grid.Row="1" Background="{TemplateBinding Background}">
                <ContentPresenter />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <!-- ■ 各コントロールのスタイルテンプレート -->

    <!-- Ribbonファンクションキーの背景色 -->
    <LinearGradientBrush x:Key="RibbonFunctionBackground" EndPoint="0,1" StartPoint="0,0">
      <!--<GradientStop Color="Transparent" Offset="0.3"/>
      <GradientStop Color="Orange" Offset="0.99"/>
      <GradientStop Color="Transparent" Offset="1"/>-->
      <GradientStop Color="Transparent" Offset="1"/>
    </LinearGradientBrush>

    <!--リボン関連-->
    <Style x:Key="{x:Type Ribbon}" TargetType="{x:Type Ribbon}">
      <Setter Property="Height" Value="130"/>
    </Style>
    <Style x:Key="{x:Type RibbonButton}" TargetType="{x:Type RibbonButton}">
      <Setter Property="Label.FontFamily" Value="メイリオ"/>
      <Setter Property="Width" Value="62"/>
    </Style>
    <Style x:Key="{x:Type RibbonTab}" TargetType="{x:Type RibbonTab}">
      <Setter Property="Height" Value="70"/>
    </Style>

    <!--コンボボックス-->
        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="Orange"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="False">
                    <Setter Property="Background" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
      <Setter Property="Background" Value="White"/>
      <Setter Property="Foreground" Value="Black"/>
    </Style>-->
    <!-- TabItemの枠線の色 -->
    <SolidColorBrush x:Key="TabItemNormalBorderBrush" Color="White"/>
    <!-- TabItemの背景色 -->
    <LinearGradientBrush x:Key="TabItemBackground" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#5383c3" Offset="0"/>
      <GradientStop Color="#4c6cd3" Offset=".5"/>
      <GradientStop Color="#3e62ad" Offset=".5"/>
      <GradientStop Color="#507ea4" Offset="1"/>
    </LinearGradientBrush>
    <!-- TabItemのマウスオーバー時の背景色 -->
    <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="YellowGreen" Offset="0"/>
      <GradientStop Color="YellowGreen" Offset="1"/>
    </LinearGradientBrush>
    <!-- TabItemのマウスオーバー時の枠線の色 -->
    <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#eebbcd"/>
    <!-- TabItem選択時の背景色 -->
    <LinearGradientBrush x:Key="TabItemSelectedBackground" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="DarkOrange" Offset="0.3"/>
      <GradientStop Color="DarkOrange" Offset="1"/>
    </LinearGradientBrush>
    <!-- TabItem無効化時の色 -->
    <SolidColorBrush x:Key="TabItemDisabledBackground" Color="DarkGray"/>
    <!-- TabItem無効化時の枠線の色 -->
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>

    <!-- TabItemのスタイルを設定 -->
    <Style TargetType="{x:Type TabItem}">
      <!-- TabItemの文字の色 -->
      <Setter Property="Foreground" Value="White"/>
      <!-- TabItemの枠線の色-->
      <Setter Property="BorderBrush" Value="{StaticResource TabItemNormalBorderBrush}"/>
      <!-- TabItemの背景色の設定 -->
      <Setter Property="Background" Value="{StaticResource TabItemBackground}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TabItem}">
            <Grid SnapsToDevicePixels="true">
              <Border x:Name="Bd" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="1,1,1,0" 
                                    Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}">
                <ContentPresenter x:Name="Content" 
                                                  ContentSource="Header" 
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="true">
                <!-- マウスオーバー時の背景色 -->
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
              </Trigger>
              <Trigger Property="IsSelected" Value="true">
                <Setter Property="Panel.ZIndex" Value="1"/>
                <!-- 選択時の背景色 -->
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected" Value="false"/>
                  <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <!-- マウスオーバー時の枠線の色 -->
                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
              </MultiTrigger>

              <Trigger Property="IsEnabled" Value="false">
                <!-- 無効化時の背景色 -->
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                <!-- 無効化時の枠線の色-->
                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                <!-- 無効化時の文字の色 -->
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- RadioButton -->
    <Style x:Key="{x:Type RadioButton}"
       TargetType="{x:Type RadioButton}">
      <Setter Property="SnapsToDevicePixels"
          Value="true" />
      <Setter Property="OverridesDefaultStyle"
          Value="true" />
      <Setter Property="FocusVisualStyle"
          Value="{DynamicResource RadioButtonFocusVisual}" />
      <Setter Property="Foreground" Value="Black" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RadioButton}">
            <BulletDecorator Background="Transparent">
              <BulletDecorator.Bullet>
                <Grid Width="13"
                  Height="13">
                  <Ellipse x:Name="Border"
                       StrokeThickness="1">
                    <Ellipse.Stroke>
                      <LinearGradientBrush EndPoint="0.5,1"
                                       StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0" />
                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1" />
                      </LinearGradientBrush>
                    </Ellipse.Stroke>
                    <Ellipse.Fill>
                      <LinearGradientBrush StartPoint="0,0"
                                       EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="{DynamicResource ControlLightColor}" />
                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                      Offset="1.0" />
                          </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Ellipse.Fill>
                  </Ellipse>
                  <Ellipse x:Name="CheckMark"
                       Margin="4"
                       Visibility="Collapsed">
                    <Ellipse.Fill>
                      <SolidColorBrush Color="Blue" />
                    </Ellipse.Fill>
                  </Ellipse>
                </Grid>
              </BulletDecorator.Bullet>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                      </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                      </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlLightColor}" />
                      </ColorAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0"
                                         Value="#40000000" />
                      </ColorAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0"
                                         Value="#40000000" />
                      </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="CheckMark">
                        <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked" />
                  <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
            </BulletDecorator>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- ToolTipのスタイル -->
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="HorizontalOffset" Value="0"/>
            <Setter Property="VerticalOffset" Value="-20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Name="Border" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <!--<GradientStop Color="#3b5998" Offset="0.0" />
                                            <GradientStop Color="#3b5998" Offset="1.0" />-->
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <!-- TreeViewのスタイル -->
    <Style x:Key="{x:Type TreeView}" TargetType="TreeView">
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="TreeView">
            <Border Name="Border"
                    CornerRadius="1"
                    BorderThickness="1">
              <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
              </Border.BorderBrush>
              <Border.Background>
                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
              </Border.Background>
              <ScrollViewer Focusable="False"
                            CanContentScroll="False"
                            Padding="4">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
      <Setter Property="Focusable" Value="False" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid Width="15"
                  Height="13"
                  Background="Transparent">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                    Storyboard.TargetName="Collapsed">
                        <DiscreteObjectKeyFrame KeyTime="0"
                                                Value="{x:Static Visibility.Hidden}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                      Storyboard.TargetName="Expanded">
                        <DiscreteObjectKeyFrame KeyTime="0"
                                                Value="{x:Static Visibility.Visible}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked" />
                  <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Path x:Name="Collapsed"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Margin="1,1,1,1"
                    Data="M 4 0 L 8 4 L 4 8 Z">
                <Path.Fill>
                  <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                </Path.Fill>
              </Path>
              <Path x:Name="Expanded"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Margin="1,1,1,1"
                    Data="M 0 4 L 8 4 L 4 8 Z"
                    Visibility="Hidden">
                <Path.Fill>
                  <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                </Path.Fill>
              </Path>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Border>
              <Rectangle Margin="0,0,0,0"
                          StrokeThickness="5"
                          Stroke="Black"
                          StrokeDashArray="1 2"
                          Opacity="0" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="{x:Type TreeViewItem}"
            TargetType="{x:Type TreeViewItem}">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="HorizontalContentAlignment"
              Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
      <Setter Property="VerticalContentAlignment"
              Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
      <Setter Property="Padding" Value="1,0,0,0" />
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TreeViewItem}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="19" Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
              </Grid.RowDefinitions>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                  <VisualState x:Name="Selected">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                    Storyboard.TargetProperty="(Panel.Background).
                                                    (SolidColorBrush.Color)"
                                                    >
                        <EasingColorKeyFrame KeyTime="0"
                                            Value="{StaticResource SelectedBackgroundColor}" />
                      </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unselected" />
                  <VisualState x:Name="SelectedInactive">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                    Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                        <EasingColorKeyFrame KeyTime="0"
                                              Value="{StaticResource SelectedBackgroundColor}" />
                      </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpansionStates">
                  <VisualState x:Name="Expanded">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                    Storyboard.TargetName="ItemsHost">
                        <DiscreteObjectKeyFrame KeyTime="0"
                                                Value="{x:Static Visibility.Visible}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Collapsed" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ToggleButton x:Name="Expander"
                            Style="{StaticResource ExpandCollapseToggleStyle}"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, 
                            RelativeSource={RelativeSource TemplatedParent}}"/>
              <Border x:Name="Bd"
                      Grid.Column="1"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}">
                <ContentPresenter x:Name="PART_Header"
                                  ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
              </Border>
              <ItemsPresenter x:Name="ItemsHost"
                              Grid.Row="1"
                              Grid.Column="1"
                              Grid.ColumnSpan="2"
                              Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="HasItems" Value="false">
                <Setter TargetName="Expander"
                        Property="Visibility"
                        Value="Hidden" />
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="HasHeader" Value="false" />
                  <Condition Property="Width" Value="Auto" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header"
                        Property="MinWidth"
                        Value="75" />
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="HasHeader" Value="false" />
                  <Condition Property="Height" Value="Auto" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header"
                        Property="MinHeight"
                        Value="19" />
              </MultiTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <ControlTemplate x:Key="validationTemplate">
      <DockPanel>
        <AdornedElementPlaceholder/>
      </DockPanel>
    </ControlTemplate>

  </Application.Resources>
</Application>
