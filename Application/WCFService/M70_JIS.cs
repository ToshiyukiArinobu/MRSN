//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace KyoeiSystem.Application.WCFService
{
    [DataContract(IsReference = true)]
    public partial class M70_JIS: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Simple Properties
    
        [DataMember]
        public int 自社コード
        {
            get { return _自社コード; }
            set
            {
                if (_自社コード != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '自社コード' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _自社コード = value;
                    OnPropertyChanged("自社コード");
                }
            }
        }
        private int _自社コード;
    
        [DataMember]
        public string 自社名
        {
            get { return _自社名; }
            set
            {
                if (_自社名 != value)
                {
                    _自社名 = value;
                    OnPropertyChanged("自社名");
                }
            }
        }
        private string _自社名;
    
        [DataMember]
        public string カナ
        {
            get { return _カナ; }
            set
            {
                if (_カナ != value)
                {
                    _カナ = value;
                    OnPropertyChanged("カナ");
                }
            }
        }
        private string _カナ;
    
        [DataMember]
        public string 代表者名
        {
            get { return _代表者名; }
            set
            {
                if (_代表者名 != value)
                {
                    _代表者名 = value;
                    OnPropertyChanged("代表者名");
                }
            }
        }
        private string _代表者名;
    
        [DataMember]
        public string 郵便番号
        {
            get { return _郵便番号; }
            set
            {
                if (_郵便番号 != value)
                {
                    _郵便番号 = value;
                    OnPropertyChanged("郵便番号");
                }
            }
        }
        private string _郵便番号;
    
        [DataMember]
        public string 住所１
        {
            get { return _住所１; }
            set
            {
                if (_住所１ != value)
                {
                    _住所１ = value;
                    OnPropertyChanged("住所１");
                }
            }
        }
        private string _住所１;
    
        [DataMember]
        public string 住所２
        {
            get { return _住所２; }
            set
            {
                if (_住所２ != value)
                {
                    _住所２ = value;
                    OnPropertyChanged("住所２");
                }
            }
        }
        private string _住所２;
    
        [DataMember]
        public string 電話番号
        {
            get { return _電話番号; }
            set
            {
                if (_電話番号 != value)
                {
                    _電話番号 = value;
                    OnPropertyChanged("電話番号");
                }
            }
        }
        private string _電話番号;
    
        [DataMember]
        public string ＦＡＸ
        {
            get { return _ｆＡＸ; }
            set
            {
                if (_ｆＡＸ != value)
                {
                    _ｆＡＸ = value;
                    OnPropertyChanged("ＦＡＸ");
                }
            }
        }
        private string _ｆＡＸ;
    
        [DataMember]
        public string 振込銀行１
        {
            get { return _振込銀行１; }
            set
            {
                if (_振込銀行１ != value)
                {
                    _振込銀行１ = value;
                    OnPropertyChanged("振込銀行１");
                }
            }
        }
        private string _振込銀行１;
    
        [DataMember]
        public string 振込銀行２
        {
            get { return _振込銀行２; }
            set
            {
                if (_振込銀行２ != value)
                {
                    _振込銀行２ = value;
                    OnPropertyChanged("振込銀行２");
                }
            }
        }
        private string _振込銀行２;
    
        [DataMember]
        public string 振込銀行３
        {
            get { return _振込銀行３; }
            set
            {
                if (_振込銀行３ != value)
                {
                    _振込銀行３ = value;
                    OnPropertyChanged("振込銀行３");
                }
            }
        }
        private string _振込銀行３;
    
        [DataMember]
        public byte[] ロゴ画像
        {
            get { return _ロゴ画像; }
            set
            {
                if (_ロゴ画像 != value)
                {
                    _ロゴ画像 = value;
                    OnPropertyChanged("ロゴ画像");
                }
            }
        }
        private byte[] _ロゴ画像;
    
        [DataMember]
        public string 法人ナンバー
        {
            get { return _法人ナンバー; }
            set
            {
                if (_法人ナンバー != value)
                {
                    _法人ナンバー = value;
                    OnPropertyChanged("法人ナンバー");
                }
            }
        }
        private string _法人ナンバー;
    
        [DataMember]
        public int 自社区分
        {
            get { return _自社区分; }
            set
            {
                if (_自社区分 != value)
                {
                    _自社区分 = value;
                    OnPropertyChanged("自社区分");
                }
            }
        }
        private int _自社区分;
    
        [DataMember]
        public Nullable<int> 取引先コード
        {
            get { return _取引先コード; }
            set
            {
                if (_取引先コード != value)
                {
                    _取引先コード = value;
                    OnPropertyChanged("取引先コード");
                }
            }
        }
        private Nullable<int> _取引先コード;
    
        [DataMember]
        public Nullable<int> 枝番
        {
            get { return _枝番; }
            set
            {
                if (_枝番 != value)
                {
                    _枝番 = value;
                    OnPropertyChanged("枝番");
                }
            }
        }
        private Nullable<int> _枝番;
    
        [DataMember]
        public Nullable<int> 登録者
        {
            get { return _登録者; }
            set
            {
                if (_登録者 != value)
                {
                    _登録者 = value;
                    OnPropertyChanged("登録者");
                }
            }
        }
        private Nullable<int> _登録者;
    
        [DataMember]
        public Nullable<System.DateTime> 登録日時
        {
            get { return _登録日時; }
            set
            {
                if (_登録日時 != value)
                {
                    _登録日時 = value;
                    OnPropertyChanged("登録日時");
                }
            }
        }
        private Nullable<System.DateTime> _登録日時;
    
        [DataMember]
        public Nullable<int> 最終更新者
        {
            get { return _最終更新者; }
            set
            {
                if (_最終更新者 != value)
                {
                    _最終更新者 = value;
                    OnPropertyChanged("最終更新者");
                }
            }
        }
        private Nullable<int> _最終更新者;
    
        [DataMember]
        public Nullable<System.DateTime> 最終更新日時
        {
            get { return _最終更新日時; }
            set
            {
                if (_最終更新日時 != value)
                {
                    _最終更新日時 = value;
                    OnPropertyChanged("最終更新日時");
                }
            }
        }
        private Nullable<System.DateTime> _最終更新日時;
    
        [DataMember]
        public Nullable<int> 削除者
        {
            get { return _削除者; }
            set
            {
                if (_削除者 != value)
                {
                    _削除者 = value;
                    OnPropertyChanged("削除者");
                }
            }
        }
        private Nullable<int> _削除者;
    
        [DataMember]
        public Nullable<System.DateTime> 削除日時
        {
            get { return _削除日時; }
            set
            {
                if (_削除日時 != value)
                {
                    _削除日時 = value;
                    OnPropertyChanged("削除日時");
                }
            }
        }
        private Nullable<System.DateTime> _削除日時;
    
        [DataMember]
        public Nullable<int> 決算月
        {
            get { return _決算月; }
            set
            {
                if (_決算月 != value)
                {
                    _決算月 = value;
                    OnPropertyChanged("決算月");
                }
            }
        }
        private Nullable<int> _決算月;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
