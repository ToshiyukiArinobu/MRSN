//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace KyoeiSystem.Application.WCFService
{
    [DataContract(IsReference = true)]
    public partial class M09_HIN: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Simple Properties
    
        [DataMember]
        public int 品番コード
        {
            get { return _品番コード; }
            set
            {
                if (_品番コード != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '品番コード' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _品番コード = value;
                    OnPropertyChanged("品番コード");
                }
            }
        }
        private int _品番コード;
    
        [DataMember]
        public string 自社品番
        {
            get { return _自社品番; }
            set
            {
                if (_自社品番 != value)
                {
                    _自社品番 = value;
                    OnPropertyChanged("自社品番");
                }
            }
        }
        private string _自社品番;
    
        [DataMember]
        public string 自社色
        {
            get { return _自社色; }
            set
            {
                if (_自社色 != value)
                {
                    _自社色 = value;
                    OnPropertyChanged("自社色");
                }
            }
        }
        private string _自社色;
    
        [DataMember]
        public Nullable<int> 商品形態分類
        {
            get { return _商品形態分類; }
            set
            {
                if (_商品形態分類 != value)
                {
                    _商品形態分類 = value;
                    OnPropertyChanged("商品形態分類");
                }
            }
        }
        private Nullable<int> _商品形態分類;
    
        [DataMember]
        public Nullable<int> 商品分類
        {
            get { return _商品分類; }
            set
            {
                if (_商品分類 != value)
                {
                    _商品分類 = value;
                    OnPropertyChanged("商品分類");
                }
            }
        }
        private Nullable<int> _商品分類;
    
        [DataMember]
        public Nullable<int> 大分類
        {
            get { return _大分類; }
            set
            {
                if (_大分類 != value)
                {
                    _大分類 = value;
                    OnPropertyChanged("大分類");
                }
            }
        }
        private Nullable<int> _大分類;
    
        [DataMember]
        public Nullable<int> 中分類
        {
            get { return _中分類; }
            set
            {
                if (_中分類 != value)
                {
                    _中分類 = value;
                    OnPropertyChanged("中分類");
                }
            }
        }
        private Nullable<int> _中分類;
    
        [DataMember]
        public string ブランド
        {
            get { return _ブランド; }
            set
            {
                if (_ブランド != value)
                {
                    _ブランド = value;
                    OnPropertyChanged("ブランド");
                }
            }
        }
        private string _ブランド;
    
        [DataMember]
        public string シリーズ
        {
            get { return _シリーズ; }
            set
            {
                if (_シリーズ != value)
                {
                    _シリーズ = value;
                    OnPropertyChanged("シリーズ");
                }
            }
        }
        private string _シリーズ;
    
        [DataMember]
        public string 品群
        {
            get { return _品群; }
            set
            {
                if (_品群 != value)
                {
                    _品群 = value;
                    OnPropertyChanged("品群");
                }
            }
        }
        private string _品群;
    
        [DataMember]
        public string 自社品名
        {
            get { return _自社品名; }
            set
            {
                if (_自社品名 != value)
                {
                    _自社品名 = value;
                    OnPropertyChanged("自社品名");
                }
            }
        }
        private string _自社品名;
    
        [DataMember]
        public string 単位
        {
            get { return _単位; }
            set
            {
                if (_単位 != value)
                {
                    _単位 = value;
                    OnPropertyChanged("単位");
                }
            }
        }
        private string _単位;
    
        [DataMember]
        public Nullable<decimal> 原価
        {
            get { return _原価; }
            set
            {
                if (_原価 != value)
                {
                    _原価 = value;
                    OnPropertyChanged("原価");
                }
            }
        }
        private Nullable<decimal> _原価;
    
        [DataMember]
        public Nullable<decimal> 加工原価
        {
            get { return _加工原価; }
            set
            {
                if (_加工原価 != value)
                {
                    _加工原価 = value;
                    OnPropertyChanged("加工原価");
                }
            }
        }
        private Nullable<decimal> _加工原価;
    
        [DataMember]
        public Nullable<decimal> 卸値
        {
            get { return _卸値; }
            set
            {
                if (_卸値 != value)
                {
                    _卸値 = value;
                    OnPropertyChanged("卸値");
                }
            }
        }
        private Nullable<decimal> _卸値;
    
        [DataMember]
        public Nullable<decimal> 売価
        {
            get { return _売価; }
            set
            {
                if (_売価 != value)
                {
                    _売価 = value;
                    OnPropertyChanged("売価");
                }
            }
        }
        private Nullable<decimal> _売価;
    
        [DataMember]
        public Nullable<decimal> 掛率
        {
            get { return _掛率; }
            set
            {
                if (_掛率 != value)
                {
                    _掛率 = value;
                    OnPropertyChanged("掛率");
                }
            }
        }
        private Nullable<decimal> _掛率;
    
        [DataMember]
        public Nullable<int> 消費税区分
        {
            get { return _消費税区分; }
            set
            {
                if (_消費税区分 != value)
                {
                    _消費税区分 = value;
                    OnPropertyChanged("消費税区分");
                }
            }
        }
        private Nullable<int> _消費税区分;
    
        [DataMember]
        public string 備考１
        {
            get { return _備考１; }
            set
            {
                if (_備考１ != value)
                {
                    _備考１ = value;
                    OnPropertyChanged("備考１");
                }
            }
        }
        private string _備考１;
    
        [DataMember]
        public string 備考２
        {
            get { return _備考２; }
            set
            {
                if (_備考２ != value)
                {
                    _備考２ = value;
                    OnPropertyChanged("備考２");
                }
            }
        }
        private string _備考２;
    
        [DataMember]
        public Nullable<int> 返却可能期限
        {
            get { return _返却可能期限; }
            set
            {
                if (_返却可能期限 != value)
                {
                    _返却可能期限 = value;
                    OnPropertyChanged("返却可能期限");
                }
            }
        }
        private Nullable<int> _返却可能期限;
    
        [DataMember]
        public string ＪＡＮコード
        {
            get { return _ｊＡＮコード; }
            set
            {
                if (_ｊＡＮコード != value)
                {
                    _ｊＡＮコード = value;
                    OnPropertyChanged("ＪＡＮコード");
                }
            }
        }
        private string _ｊＡＮコード;
    
        [DataMember]
        public Nullable<int> 論理削除
        {
            get { return _論理削除; }
            set
            {
                if (_論理削除 != value)
                {
                    _論理削除 = value;
                    OnPropertyChanged("論理削除");
                }
            }
        }
        private Nullable<int> _論理削除;
    
        [DataMember]
        public Nullable<int> 登録者
        {
            get { return _登録者; }
            set
            {
                if (_登録者 != value)
                {
                    _登録者 = value;
                    OnPropertyChanged("登録者");
                }
            }
        }
        private Nullable<int> _登録者;
    
        [DataMember]
        public Nullable<System.DateTime> 登録日時
        {
            get { return _登録日時; }
            set
            {
                if (_登録日時 != value)
                {
                    _登録日時 = value;
                    OnPropertyChanged("登録日時");
                }
            }
        }
        private Nullable<System.DateTime> _登録日時;
    
        [DataMember]
        public Nullable<int> 最終更新者
        {
            get { return _最終更新者; }
            set
            {
                if (_最終更新者 != value)
                {
                    _最終更新者 = value;
                    OnPropertyChanged("最終更新者");
                }
            }
        }
        private Nullable<int> _最終更新者;
    
        [DataMember]
        public Nullable<System.DateTime> 最終更新日時
        {
            get { return _最終更新日時; }
            set
            {
                if (_最終更新日時 != value)
                {
                    _最終更新日時 = value;
                    OnPropertyChanged("最終更新日時");
                }
            }
        }
        private Nullable<System.DateTime> _最終更新日時;
    
        [DataMember]
        public Nullable<int> 削除者
        {
            get { return _削除者; }
            set
            {
                if (_削除者 != value)
                {
                    _削除者 = value;
                    OnPropertyChanged("削除者");
                }
            }
        }
        private Nullable<int> _削除者;
    
        [DataMember]
        public Nullable<System.DateTime> 削除日時
        {
            get { return _削除日時; }
            set
            {
                if (_削除日時 != value)
                {
                    _削除日時 = value;
                    OnPropertyChanged("削除日時");
                }
            }
        }
        private Nullable<System.DateTime> _削除日時;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
