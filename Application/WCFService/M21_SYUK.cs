//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace KyoeiSystem.Application.WCFService
{
    [DataContract(IsReference = true)]
    public partial class M21_SYUK: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Simple Properties
    
        [DataMember]
        public string 出荷先コード
        {
            get { return _出荷先コード; }
            set
            {
                if (_出荷先コード != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '出荷先コード' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _出荷先コード = value;
                    OnPropertyChanged("出荷先コード");
                }
            }
        }
        private string _出荷先コード;
    
        [DataMember]
        public string 出荷先名１
        {
            get { return _出荷先名１; }
            set
            {
                if (_出荷先名１ != value)
                {
                    _出荷先名１ = value;
                    OnPropertyChanged("出荷先名１");
                }
            }
        }
        private string _出荷先名１;
    
        [DataMember]
        public string 出荷先名２
        {
            get { return _出荷先名２; }
            set
            {
                if (_出荷先名２ != value)
                {
                    _出荷先名２ = value;
                    OnPropertyChanged("出荷先名２");
                }
            }
        }
        private string _出荷先名２;
    
        [DataMember]
        public string 出荷先カナ
        {
            get { return _出荷先カナ; }
            set
            {
                if (_出荷先カナ != value)
                {
                    _出荷先カナ = value;
                    OnPropertyChanged("出荷先カナ");
                }
            }
        }
        private string _出荷先カナ;
    
        [DataMember]
        public string 出荷先郵便番号
        {
            get { return _出荷先郵便番号; }
            set
            {
                if (_出荷先郵便番号 != value)
                {
                    _出荷先郵便番号 = value;
                    OnPropertyChanged("出荷先郵便番号");
                }
            }
        }
        private string _出荷先郵便番号;
    
        [DataMember]
        public string 出荷先住所１
        {
            get { return _出荷先住所１; }
            set
            {
                if (_出荷先住所１ != value)
                {
                    _出荷先住所１ = value;
                    OnPropertyChanged("出荷先住所１");
                }
            }
        }
        private string _出荷先住所１;
    
        [DataMember]
        public string 出荷先住所２
        {
            get { return _出荷先住所２; }
            set
            {
                if (_出荷先住所２ != value)
                {
                    _出荷先住所２ = value;
                    OnPropertyChanged("出荷先住所２");
                }
            }
        }
        private string _出荷先住所２;
    
        [DataMember]
        public string 出荷先電話番号
        {
            get { return _出荷先電話番号; }
            set
            {
                if (_出荷先電話番号 != value)
                {
                    _出荷先電話番号 = value;
                    OnPropertyChanged("出荷先電話番号");
                }
            }
        }
        private string _出荷先電話番号;
    
        [DataMember]
        public string 備考１
        {
            get { return _備考１; }
            set
            {
                if (_備考１ != value)
                {
                    _備考１ = value;
                    OnPropertyChanged("備考１");
                }
            }
        }
        private string _備考１;
    
        [DataMember]
        public string 備考２
        {
            get { return _備考２; }
            set
            {
                if (_備考２ != value)
                {
                    _備考２ = value;
                    OnPropertyChanged("備考２");
                }
            }
        }
        private string _備考２;
    
        [DataMember]
        public Nullable<int> 登録者
        {
            get { return _登録者; }
            set
            {
                if (_登録者 != value)
                {
                    _登録者 = value;
                    OnPropertyChanged("登録者");
                }
            }
        }
        private Nullable<int> _登録者;
    
        [DataMember]
        public Nullable<System.DateTime> 登録日時
        {
            get { return _登録日時; }
            set
            {
                if (_登録日時 != value)
                {
                    _登録日時 = value;
                    OnPropertyChanged("登録日時");
                }
            }
        }
        private Nullable<System.DateTime> _登録日時;
    
        [DataMember]
        public Nullable<int> 最終更新者
        {
            get { return _最終更新者; }
            set
            {
                if (_最終更新者 != value)
                {
                    _最終更新者 = value;
                    OnPropertyChanged("最終更新者");
                }
            }
        }
        private Nullable<int> _最終更新者;
    
        [DataMember]
        public Nullable<System.DateTime> 最終更新日時
        {
            get { return _最終更新日時; }
            set
            {
                if (_最終更新日時 != value)
                {
                    _最終更新日時 = value;
                    OnPropertyChanged("最終更新日時");
                }
            }
        }
        private Nullable<System.DateTime> _最終更新日時;
    
        [DataMember]
        public Nullable<int> 削除者
        {
            get { return _削除者; }
            set
            {
                if (_削除者 != value)
                {
                    _削除者 = value;
                    OnPropertyChanged("削除者");
                }
            }
        }
        private Nullable<int> _削除者;
    
        [DataMember]
        public Nullable<System.DateTime> 削除日時
        {
            get { return _削除日時; }
            set
            {
                if (_削除日時 != value)
                {
                    _削除日時 = value;
                    OnPropertyChanged("削除日時");
                }
            }
        }
        private Nullable<System.DateTime> _削除日時;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
