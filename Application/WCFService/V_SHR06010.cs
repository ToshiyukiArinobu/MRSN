//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace KyoeiSystem.Application.WCFService
{
    [DataContract(IsReference = true)]
    public partial class V_SHR06010: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Simple Properties
    
        [DataMember]
        public int 自社コード
        {
            get { return _自社コード; }
            set
            {
                if (_自社コード != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '自社コード' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _自社コード = value;
                    OnPropertyChanged("自社コード");
                }
            }
        }
        private int _自社コード;
    
        [DataMember]
        public string 自社名
        {
            get { return _自社名; }
            set
            {
                if (_自社名 != value)
                {
                    _自社名 = value;
                    OnPropertyChanged("自社名");
                }
            }
        }
        private string _自社名;
    
        [DataMember]
        public int K支払年月
        {
            get { return _k支払年月; }
            set
            {
                if (_k支払年月 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'K支払年月' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _k支払年月 = value;
                    OnPropertyChanged("K支払年月");
                }
            }
        }
        private int _k支払年月;
    
        [DataMember]
        public Nullable<int> K入金日
        {
            get { return _k入金日; }
            set
            {
                if (_k入金日 != value)
                {
                    _k入金日 = value;
                    OnPropertyChanged("K入金日");
                }
            }
        }
        private Nullable<int> _k入金日;
    
        [DataMember]
        public int K支払先コード
        {
            get { return _k支払先コード; }
            set
            {
                if (_k支払先コード != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'K支払先コード' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _k支払先コード = value;
                    OnPropertyChanged("K支払先コード");
                }
            }
        }
        private int _k支払先コード;
    
        [DataMember]
        public int K支払先枝番
        {
            get { return _k支払先枝番; }
            set
            {
                if (_k支払先枝番 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'K支払先枝番' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _k支払先枝番 = value;
                    OnPropertyChanged("K支払先枝番");
                }
            }
        }
        private int _k支払先枝番;
    
        [DataMember]
        public string 支払先コード
        {
            get { return _支払先コード; }
            set
            {
                if (_支払先コード != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '支払先コード' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _支払先コード = value;
                    OnPropertyChanged("支払先コード");
                }
            }
        }
        private string _支払先コード;
    
        [DataMember]
        public string 支払先名
        {
            get { return _支払先名; }
            set
            {
                if (_支払先名 != value)
                {
                    _支払先名 = value;
                    OnPropertyChanged("支払先名");
                }
            }
        }
        private string _支払先名;
    
        [DataMember]
        public string 支払日付
        {
            get { return _支払日付; }
            set
            {
                if (_支払日付 != value)
                {
                    _支払日付 = value;
                    OnPropertyChanged("支払日付");
                }
            }
        }
        private string _支払日付;
    
        [DataMember]
        public Nullable<long> 支払額
        {
            get { return _支払額; }
            set
            {
                if (_支払額 != value)
                {
                    _支払額 = value;
                    OnPropertyChanged("支払額");
                }
            }
        }
        private Nullable<long> _支払額;
    
        [DataMember]
        public Nullable<long> 消費税
        {
            get { return _消費税; }
            set
            {
                if (_消費税 != value)
                {
                    _消費税 = value;
                    OnPropertyChanged("消費税");
                }
            }
        }
        private Nullable<long> _消費税;
    
        [DataMember]
        public Nullable<long> 支払予定額
        {
            get { return _支払予定額; }
            set
            {
                if (_支払予定額 != value)
                {
                    _支払予定額 = value;
                    OnPropertyChanged("支払予定額");
                }
            }
        }
        private Nullable<long> _支払予定額;
    
        [DataMember]
        public string 支払年月
        {
            get { return _支払年月; }
            set
            {
                if (_支払年月 != value)
                {
                    _支払年月 = value;
                    OnPropertyChanged("支払年月");
                }
            }
        }
        private string _支払年月;
    
        [DataMember]
        public int 締日
        {
            get { return _締日; }
            set
            {
                if (_締日 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '締日' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _締日 = value;
                    OnPropertyChanged("締日");
                }
            }
        }
        private int _締日;
    
        [DataMember]
        public Nullable<int> 当月支払額
        {
            get { return _当月支払額; }
            set
            {
                if (_当月支払額 != value)
                {
                    _当月支払額 = value;
                    OnPropertyChanged("当月支払額");
                }
            }
        }
        private Nullable<int> _当月支払額;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
