//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace KyoeiSystem.Application.WCFService
{
    [DataContract(IsReference = true)]
    public partial class V_M01_TOK: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Simple Properties
    
        [DataMember]
        public int 取引先コード
        {
            get { return _取引先コード; }
            set
            {
                if (_取引先コード != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '取引先コード' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _取引先コード = value;
                    OnPropertyChanged("取引先コード");
                }
            }
        }
        private int _取引先コード;
    
        [DataMember]
        public int 枝番
        {
            get { return _枝番; }
            set
            {
                if (_枝番 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '枝番' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _枝番 = value;
                    OnPropertyChanged("枝番");
                }
            }
        }
        private int _枝番;
    
        [DataMember]
        public int 取引区分
        {
            get { return _取引区分; }
            set
            {
                if (_取引区分 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '取引区分' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _取引区分 = value;
                    OnPropertyChanged("取引区分");
                }
            }
        }
        private int _取引区分;
    
        [DataMember]
        public string 取引区分名
        {
            get { return _取引区分名; }
            set
            {
                if (_取引区分名 != value)
                {
                    _取引区分名 = value;
                    OnPropertyChanged("取引区分名");
                }
            }
        }
        private string _取引区分名;
    
        [DataMember]
        public string 得意先名１
        {
            get { return _得意先名１; }
            set
            {
                if (_得意先名１ != value)
                {
                    _得意先名１ = value;
                    OnPropertyChanged("得意先名１");
                }
            }
        }
        private string _得意先名１;
    
        [DataMember]
        public string 得意先名２
        {
            get { return _得意先名２; }
            set
            {
                if (_得意先名２ != value)
                {
                    _得意先名２ = value;
                    OnPropertyChanged("得意先名２");
                }
            }
        }
        private string _得意先名２;
    
        [DataMember]
        public string 部課名称
        {
            get { return _部課名称; }
            set
            {
                if (_部課名称 != value)
                {
                    _部課名称 = value;
                    OnPropertyChanged("部課名称");
                }
            }
        }
        private string _部課名称;
    
        [DataMember]
        public string 略称名
        {
            get { return _略称名; }
            set
            {
                if (_略称名 != value)
                {
                    _略称名 = value;
                    OnPropertyChanged("略称名");
                }
            }
        }
        private string _略称名;
    
        [DataMember]
        public string 郵便番号
        {
            get { return _郵便番号; }
            set
            {
                if (_郵便番号 != value)
                {
                    _郵便番号 = value;
                    OnPropertyChanged("郵便番号");
                }
            }
        }
        private string _郵便番号;
    
        [DataMember]
        public string 住所１
        {
            get { return _住所１; }
            set
            {
                if (_住所１ != value)
                {
                    _住所１ = value;
                    OnPropertyChanged("住所１");
                }
            }
        }
        private string _住所１;
    
        [DataMember]
        public string 住所２
        {
            get { return _住所２; }
            set
            {
                if (_住所２ != value)
                {
                    _住所２ = value;
                    OnPropertyChanged("住所２");
                }
            }
        }
        private string _住所２;
    
        [DataMember]
        public string 電話番号
        {
            get { return _電話番号; }
            set
            {
                if (_電話番号 != value)
                {
                    _電話番号 = value;
                    OnPropertyChanged("電話番号");
                }
            }
        }
        private string _電話番号;
    
        [DataMember]
        public string ＦＡＸ
        {
            get { return _ｆＡＸ; }
            set
            {
                if (_ｆＡＸ != value)
                {
                    _ｆＡＸ = value;
                    OnPropertyChanged("ＦＡＸ");
                }
            }
        }
        private string _ｆＡＸ;
    
        [DataMember]
        public string かな読み
        {
            get { return _かな読み; }
            set
            {
                if (_かな読み != value)
                {
                    _かな読み = value;
                    OnPropertyChanged("かな読み");
                }
            }
        }
        private string _かな読み;
    
        [DataMember]
        public int 担当会社コード
        {
            get { return _担当会社コード; }
            set
            {
                if (_担当会社コード != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '担当会社コード' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _担当会社コード = value;
                    OnPropertyChanged("担当会社コード");
                }
            }
        }
        private int _担当会社コード;
    
        [DataMember]
        public string 担当会社名
        {
            get { return _担当会社名; }
            set
            {
                if (_担当会社名 != value)
                {
                    _担当会社名 = value;
                    OnPropertyChanged("担当会社名");
                }
            }
        }
        private string _担当会社名;
    
        [DataMember]
        public int Ｔ消費税区分
        {
            get { return _ｔ消費税区分; }
            set
            {
                if (_ｔ消費税区分 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Ｔ消費税区分' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ｔ消費税区分 = value;
                    OnPropertyChanged("Ｔ消費税区分");
                }
            }
        }
        private int _ｔ消費税区分;
    
        [DataMember]
        public string Ｔ消費税区分名
        {
            get { return _ｔ消費税区分名; }
            set
            {
                if (_ｔ消費税区分名 != value)
                {
                    _ｔ消費税区分名 = value;
                    OnPropertyChanged("Ｔ消費税区分名");
                }
            }
        }
        private string _ｔ消費税区分名;
    
        [DataMember]
        public int Ｔ税区分ID
        {
            get { return _ｔ税区分ID; }
            set
            {
                if (_ｔ税区分ID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Ｔ税区分ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ｔ税区分ID = value;
                    OnPropertyChanged("Ｔ税区分ID");
                }
            }
        }
        private int _ｔ税区分ID;
    
        [DataMember]
        public string Ｔ税区分ID名
        {
            get { return _ｔ税区分ID名; }
            set
            {
                if (_ｔ税区分ID名 != value)
                {
                    _ｔ税区分ID名 = value;
                    OnPropertyChanged("Ｔ税区分ID名");
                }
            }
        }
        private string _ｔ税区分ID名;
    
        [DataMember]
        public Nullable<int> Ｔ締日
        {
            get { return _ｔ締日; }
            set
            {
                if (_ｔ締日 != value)
                {
                    _ｔ締日 = value;
                    OnPropertyChanged("Ｔ締日");
                }
            }
        }
        private Nullable<int> _ｔ締日;
    
        [DataMember]
        public Nullable<int> Ｔ請求条件
        {
            get { return _ｔ請求条件; }
            set
            {
                if (_ｔ請求条件 != value)
                {
                    _ｔ請求条件 = value;
                    OnPropertyChanged("Ｔ請求条件");
                }
            }
        }
        private Nullable<int> _ｔ請求条件;
    
        [DataMember]
        public int Ｔ請求区分
        {
            get { return _ｔ請求区分; }
            set
            {
                if (_ｔ請求区分 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Ｔ請求区分' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ｔ請求区分 = value;
                    OnPropertyChanged("Ｔ請求区分");
                }
            }
        }
        private int _ｔ請求区分;
    
        [DataMember]
        public string Ｔ請求区分名
        {
            get { return _ｔ請求区分名; }
            set
            {
                if (_ｔ請求区分名 != value)
                {
                    _ｔ請求区分名 = value;
                    OnPropertyChanged("Ｔ請求区分名");
                }
            }
        }
        private string _ｔ請求区分名;
    
        [DataMember]
        public Nullable<int> Ｔサイト１
        {
            get { return _ｔサイト１; }
            set
            {
                if (_ｔサイト１ != value)
                {
                    _ｔサイト１ = value;
                    OnPropertyChanged("Ｔサイト１");
                }
            }
        }
        private Nullable<int> _ｔサイト１;
    
        [DataMember]
        public Nullable<int> Ｔサイト２
        {
            get { return _ｔサイト２; }
            set
            {
                if (_ｔサイト２ != value)
                {
                    _ｔサイト２ = value;
                    OnPropertyChanged("Ｔサイト２");
                }
            }
        }
        private Nullable<int> _ｔサイト２;
    
        [DataMember]
        public Nullable<int> Ｔ入金日１
        {
            get { return _ｔ入金日１; }
            set
            {
                if (_ｔ入金日１ != value)
                {
                    _ｔ入金日１ = value;
                    OnPropertyChanged("Ｔ入金日１");
                }
            }
        }
        private Nullable<int> _ｔ入金日１;
    
        [DataMember]
        public Nullable<int> Ｔ入金日２
        {
            get { return _ｔ入金日２; }
            set
            {
                if (_ｔ入金日２ != value)
                {
                    _ｔ入金日２ = value;
                    OnPropertyChanged("Ｔ入金日２");
                }
            }
        }
        private Nullable<int> _ｔ入金日２;
    
        [DataMember]
        public int Ｓ支払消費税区分
        {
            get { return _ｓ支払消費税区分; }
            set
            {
                if (_ｓ支払消費税区分 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Ｓ支払消費税区分' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ｓ支払消費税区分 = value;
                    OnPropertyChanged("Ｓ支払消費税区分");
                }
            }
        }
        private int _ｓ支払消費税区分;
    
        [DataMember]
        public string Ｓ支払消費税区分名
        {
            get { return _ｓ支払消費税区分名; }
            set
            {
                if (_ｓ支払消費税区分名 != value)
                {
                    _ｓ支払消費税区分名 = value;
                    OnPropertyChanged("Ｓ支払消費税区分名");
                }
            }
        }
        private string _ｓ支払消費税区分名;
    
        [DataMember]
        public int Ｓ税区分ID
        {
            get { return _ｓ税区分ID; }
            set
            {
                if (_ｓ税区分ID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Ｓ税区分ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ｓ税区分ID = value;
                    OnPropertyChanged("Ｓ税区分ID");
                }
            }
        }
        private int _ｓ税区分ID;
    
        [DataMember]
        public string Ｓ税区分ID名
        {
            get { return _ｓ税区分ID名; }
            set
            {
                if (_ｓ税区分ID名 != value)
                {
                    _ｓ税区分ID名 = value;
                    OnPropertyChanged("Ｓ税区分ID名");
                }
            }
        }
        private string _ｓ税区分ID名;
    
        [DataMember]
        public Nullable<int> Ｓ締日
        {
            get { return _ｓ締日; }
            set
            {
                if (_ｓ締日 != value)
                {
                    _ｓ締日 = value;
                    OnPropertyChanged("Ｓ締日");
                }
            }
        }
        private Nullable<int> _ｓ締日;
    
        [DataMember]
        public Nullable<int> Ｓ支払条件
        {
            get { return _ｓ支払条件; }
            set
            {
                if (_ｓ支払条件 != value)
                {
                    _ｓ支払条件 = value;
                    OnPropertyChanged("Ｓ支払条件");
                }
            }
        }
        private Nullable<int> _ｓ支払条件;
    
        [DataMember]
        public int Ｓ支払区分
        {
            get { return _ｓ支払区分; }
            set
            {
                if (_ｓ支払区分 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Ｓ支払区分' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ｓ支払区分 = value;
                    OnPropertyChanged("Ｓ支払区分");
                }
            }
        }
        private int _ｓ支払区分;
    
        [DataMember]
        public string Ｓ支払区分名
        {
            get { return _ｓ支払区分名; }
            set
            {
                if (_ｓ支払区分名 != value)
                {
                    _ｓ支払区分名 = value;
                    OnPropertyChanged("Ｓ支払区分名");
                }
            }
        }
        private string _ｓ支払区分名;
    
        [DataMember]
        public Nullable<int> Ｓサイト１
        {
            get { return _ｓサイト１; }
            set
            {
                if (_ｓサイト１ != value)
                {
                    _ｓサイト１ = value;
                    OnPropertyChanged("Ｓサイト１");
                }
            }
        }
        private Nullable<int> _ｓサイト１;
    
        [DataMember]
        public Nullable<int> Ｓサイト２
        {
            get { return _ｓサイト２; }
            set
            {
                if (_ｓサイト２ != value)
                {
                    _ｓサイト２ = value;
                    OnPropertyChanged("Ｓサイト２");
                }
            }
        }
        private Nullable<int> _ｓサイト２;
    
        [DataMember]
        public Nullable<int> Ｓ入金日１
        {
            get { return _ｓ入金日１; }
            set
            {
                if (_ｓ入金日１ != value)
                {
                    _ｓ入金日１ = value;
                    OnPropertyChanged("Ｓ入金日１");
                }
            }
        }
        private Nullable<int> _ｓ入金日１;
    
        [DataMember]
        public Nullable<int> Ｓ入金日２
        {
            get { return _ｓ入金日２; }
            set
            {
                if (_ｓ入金日２ != value)
                {
                    _ｓ入金日２ = value;
                    OnPropertyChanged("Ｓ入金日２");
                }
            }
        }
        private Nullable<int> _ｓ入金日２;
    
        [DataMember]
        public Nullable<int> 与信枠
        {
            get { return _与信枠; }
            set
            {
                if (_与信枠 != value)
                {
                    _与信枠 = value;
                    OnPropertyChanged("与信枠");
                }
            }
        }
        private Nullable<int> _与信枠;
    
        [DataMember]
        public Nullable<int> Ｔ担当者コード
        {
            get { return _ｔ担当者コード; }
            set
            {
                if (_ｔ担当者コード != value)
                {
                    _ｔ担当者コード = value;
                    OnPropertyChanged("Ｔ担当者コード");
                }
            }
        }
        private Nullable<int> _ｔ担当者コード;
    
        [DataMember]
        public string Ｔ担当者名
        {
            get { return _ｔ担当者名; }
            set
            {
                if (_ｔ担当者名 != value)
                {
                    _ｔ担当者名 = value;
                    OnPropertyChanged("Ｔ担当者名");
                }
            }
        }
        private string _ｔ担当者名;
    
        [DataMember]
        public Nullable<int> Ｓ担当者コード
        {
            get { return _ｓ担当者コード; }
            set
            {
                if (_ｓ担当者コード != value)
                {
                    _ｓ担当者コード = value;
                    OnPropertyChanged("Ｓ担当者コード");
                }
            }
        }
        private Nullable<int> _ｓ担当者コード;
    
        [DataMember]
        public string Ｓ担当者名
        {
            get { return _ｓ担当者名; }
            set
            {
                if (_ｓ担当者名 != value)
                {
                    _ｓ担当者名 = value;
                    OnPropertyChanged("Ｓ担当者名");
                }
            }
        }
        private string _ｓ担当者名;
    
        [DataMember]
        public string 自社備考１
        {
            get { return _自社備考１; }
            set
            {
                if (_自社備考１ != value)
                {
                    _自社備考１ = value;
                    OnPropertyChanged("自社備考１");
                }
            }
        }
        private string _自社備考１;
    
        [DataMember]
        public string 自社備考２
        {
            get { return _自社備考２; }
            set
            {
                if (_自社備考２ != value)
                {
                    _自社備考２ = value;
                    OnPropertyChanged("自社備考２");
                }
            }
        }
        private string _自社備考２;
    
        [DataMember]
        public Nullable<int> 集約取引先コード
        {
            get { return _集約取引先コード; }
            set
            {
                if (_集約取引先コード != value)
                {
                    _集約取引先コード = value;
                    OnPropertyChanged("集約取引先コード");
                }
            }
        }
        private Nullable<int> _集約取引先コード;
    
        [DataMember]
        public Nullable<int> 集約取引先枝番
        {
            get { return _集約取引先枝番; }
            set
            {
                if (_集約取引先枝番 != value)
                {
                    _集約取引先枝番 = value;
                    OnPropertyChanged("集約取引先枝番");
                }
            }
        }
        private Nullable<int> _集約取引先枝番;
    
        [DataMember]
        public string 集約取引先名
        {
            get { return _集約取引先名; }
            set
            {
                if (_集約取引先名 != value)
                {
                    _集約取引先名 = value;
                    OnPropertyChanged("集約取引先名");
                }
            }
        }
        private string _集約取引先名;
    
        [DataMember]
        public Nullable<int> 参照取引先コード１
        {
            get { return _参照取引先コード１; }
            set
            {
                if (_参照取引先コード１ != value)
                {
                    _参照取引先コード１ = value;
                    OnPropertyChanged("参照取引先コード１");
                }
            }
        }
        private Nullable<int> _参照取引先コード１;
    
        [DataMember]
        public Nullable<int> 参照取引先枝番１
        {
            get { return _参照取引先枝番１; }
            set
            {
                if (_参照取引先枝番１ != value)
                {
                    _参照取引先枝番１ = value;
                    OnPropertyChanged("参照取引先枝番１");
                }
            }
        }
        private Nullable<int> _参照取引先枝番１;
    
        [DataMember]
        public string 参照取引先名１
        {
            get { return _参照取引先名１; }
            set
            {
                if (_参照取引先名１ != value)
                {
                    _参照取引先名１ = value;
                    OnPropertyChanged("参照取引先名１");
                }
            }
        }
        private string _参照取引先名１;
    
        [DataMember]
        public Nullable<int> 参照取引先コード２
        {
            get { return _参照取引先コード２; }
            set
            {
                if (_参照取引先コード２ != value)
                {
                    _参照取引先コード２ = value;
                    OnPropertyChanged("参照取引先コード２");
                }
            }
        }
        private Nullable<int> _参照取引先コード２;
    
        [DataMember]
        public Nullable<int> 参照取引先枝番２
        {
            get { return _参照取引先枝番２; }
            set
            {
                if (_参照取引先枝番２ != value)
                {
                    _参照取引先枝番２ = value;
                    OnPropertyChanged("参照取引先枝番２");
                }
            }
        }
        private Nullable<int> _参照取引先枝番２;
    
        [DataMember]
        public string 参照取引先名２
        {
            get { return _参照取引先名２; }
            set
            {
                if (_参照取引先名２ != value)
                {
                    _参照取引先名２ = value;
                    OnPropertyChanged("参照取引先名２");
                }
            }
        }
        private string _参照取引先名２;
    
        [DataMember]
        public Nullable<int> 参照取引先コード３
        {
            get { return _参照取引先コード３; }
            set
            {
                if (_参照取引先コード３ != value)
                {
                    _参照取引先コード３ = value;
                    OnPropertyChanged("参照取引先コード３");
                }
            }
        }
        private Nullable<int> _参照取引先コード３;
    
        [DataMember]
        public Nullable<int> 参照取引先枝番３
        {
            get { return _参照取引先枝番３; }
            set
            {
                if (_参照取引先枝番３ != value)
                {
                    _参照取引先枝番３ = value;
                    OnPropertyChanged("参照取引先枝番３");
                }
            }
        }
        private Nullable<int> _参照取引先枝番３;
    
        [DataMember]
        public string 参照取引先名３
        {
            get { return _参照取引先名３; }
            set
            {
                if (_参照取引先名３ != value)
                {
                    _参照取引先名３ = value;
                    OnPropertyChanged("参照取引先名３");
                }
            }
        }
        private string _参照取引先名３;
    
        [DataMember]
        public Nullable<int> 集計コード１
        {
            get { return _集計コード１; }
            set
            {
                if (_集計コード１ != value)
                {
                    _集計コード１ = value;
                    OnPropertyChanged("集計コード１");
                }
            }
        }
        private Nullable<int> _集計コード１;
    
        [DataMember]
        public Nullable<int> 集計コード２
        {
            get { return _集計コード２; }
            set
            {
                if (_集計コード２ != value)
                {
                    _集計コード２ = value;
                    OnPropertyChanged("集計コード２");
                }
            }
        }
        private Nullable<int> _集計コード２;
    
        [DataMember]
        public Nullable<int> 集計コード３
        {
            get { return _集計コード３; }
            set
            {
                if (_集計コード３ != value)
                {
                    _集計コード３ = value;
                    OnPropertyChanged("集計コード３");
                }
            }
        }
        private Nullable<int> _集計コード３;
    
        [DataMember]
        public int 論理削除
        {
            get { return _論理削除; }
            set
            {
                if (_論理削除 != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property '論理削除' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _論理削除 = value;
                    OnPropertyChanged("論理削除");
                }
            }
        }
        private int _論理削除;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
