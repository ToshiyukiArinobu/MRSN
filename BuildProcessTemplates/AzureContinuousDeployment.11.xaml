<Activity mc:Ignorable="sad" x:Class="TfsBuild.Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common" xmlns:mtb="clr-namespace:Microsoft.TeamFoundation.Build.Common;assembly=Microsoft.TeamFoundation.Build.Common" xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client" xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtdwa="clr-namespace:Microsoft.TeamFoundation.Deployment.Workflow.Activities;assembly=Microsoft.TeamFoundation.Deployment.Workflow" xmlns:mtdw="clr-namespace:Microsoft.TeamFoundation.Deployment.Workflow;assembly=Microsoft.TeamFoundation.Deployment.Workflow" xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mttbb="clr-namespace:Microsoft.TeamFoundation.TestImpact.BuildIntegration.BuildActivities;assembly=Microsoft.TeamFoundation.TestImpact.BuildIntegration" xmlns:mtvc="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client" xmlns:mtvco="clr-namespace:Microsoft.TeamFoundation.VersionControl.Common;assembly=Microsoft.TeamFoundation.VersionControl.Common" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sad="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sad1="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:this="clr-namespace:TfsBuild;" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SolutionToBuild" Type="InArgument(x:String)"/>
    <x:Property Name="ConfigurationsToBuild" Type="InArgument(mtbwa:PlatformConfigurationList)"/>
    <x:Property Name="TestSpecs" Type="InArgument(mtbwa:TestSpecList)"/>
    <x:Property Name="BuildNumberFormat" Type="InArgument(x:String)"/>
    <x:Property Name="CleanWorkspace" Type="InArgument(mtbwa:CleanWorkspaceOption)"/>
    <x:Property Name="RunCodeAnalysis" Type="InArgument(mtbwa:CodeAnalysisOption)"/>
    <x:Property Name="SourceAndSymbolServerSettings" Type="InArgument(mtbwa:SourceAndSymbolServerSettings)"/>
    <x:Property Name="AgentSettings" Type="InArgument(mtbwa:AgentSettings)"/>
    <x:Property Name="AssociateChangesetsAndWorkItems" Type="InArgument(x:Boolean)"/>
    <x:Property Name="CreateWorkItem" Type="InArgument(x:Boolean)"/>
    <x:Property Name="MSBuildArguments" Type="InArgument(x:String)"/>
    <x:Property Name="MSBuildPlatform" Type="InArgument(mtbwa:ToolPlatform)"/>
    <x:Property Name="MSBuildMultiProc" Type="InArgument(x:Boolean)"/>
    <x:Property Name="PerformTestImpactAnalysis" Type="InArgument(x:Boolean)"/>
    <x:Property Name="CreateLabel" Type="InArgument(x:Boolean)"/>
    <x:Property Name="DisableTests" Type="InArgument(x:Boolean)"/>
    <x:Property Name="GetVersion" Type="InArgument(x:String)"/>
    <x:Property Name="PrivateDropLocation" Type="InArgument(x:String)"/>
    <x:Property Name="Verbosity" Type="InArgument(mtbw:BuildVerbosity)"/>
    <x:Property Name="Metadata" Type="mtbw:ProcessParameterMetadataCollection"/>
    <x:Property Name="SupportedReasons" Type="mtbc:BuildReason"/>
    <x:Property Name="DeploymentEnvironmentName" Type="InArgument(x:String)"/>
    <x:Property Name="AllowUntrustedCertificates" Type="InArgument(x:Boolean)"/>
    <!-- Additional Cloud Service Overrides -->
    <x:Property Name="AlternatePublishProfile" Type="InArgument(x:String)"/>
    <x:Property Name="AlternateHostedServiceName" Type="InArgument(x:String)"/>
    <x:Property Name="AllowUpgrade" Type="InArgument(x:Boolean)"/>
    <!-- NOTE: this deliberately a String instead of Enum type so it can easily be set by server code. -->
    <x:Property Name="AlternateDeploymentSlot" Type="InArgument(x:String)"/>
    <x:Property Name="AlternateStorageAccountName" Type="InArgument(x:String)"/>
    <x:Property Name="AlternateDeploymentLabel" Type="InArgument(x:String)"/>
    <x:Property Name="AlternateServiceConfiguration" Type="InArgument(x:String)"/>
    <!-- Additional Web Deploy Overrides -->
    <x:Property Name="AlternateWebDeployPublishProfile" Type="InArgument(x:String)"/>
  </x:Members>
  <this:Process.SolutionToBuild>
    <InArgument x:TypeArguments="x:String"/>
  </this:Process.SolutionToBuild>
  <this:Process.ConfigurationsToBuild>[New Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfigurationList()]</this:Process.ConfigurationsToBuild>
  <this:Process.DisableTests>[False]</this:Process.DisableTests>
  <this:Process.TestSpecs>[New Microsoft.TeamFoundation.Build.Workflow.Activities.TestSpecList(New Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec("**\*test*.dll") With { .FailBuildOnFailure = True } )]</this:Process.TestSpecs>
  <this:Process.BuildNumberFormat>["$(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)"]</this:Process.BuildNumberFormat>
  <this:Process.AssociateChangesetsAndWorkItems>[True]</this:Process.AssociateChangesetsAndWorkItems>
  <this:Process.CreateWorkItem>[True]</this:Process.CreateWorkItem>
  <this:Process.CleanWorkspace>[Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]</this:Process.CleanWorkspace>
  <this:Process.MSBuildArguments>
    <InArgument x:TypeArguments="x:String"/>
  </this:Process.MSBuildArguments>
  <this:Process.RunCodeAnalysis>[Microsoft.TeamFoundation.Build.Workflow.Activities.CodeAnalysisOption.AsConfigured]</this:Process.RunCodeAnalysis>
  <this:Process.MSBuildMultiProc>[True]</this:Process.MSBuildMultiProc>
  <this:Process.MSBuildPlatform>[Microsoft.TeamFoundation.Build.Workflow.Activities.ToolPlatform.Auto]</this:Process.MSBuildPlatform>
  <this:Process.PerformTestImpactAnalysis>[True]</this:Process.PerformTestImpactAnalysis>
  <this:Process.SourceAndSymbolServerSettings>[New Microsoft.TeamFoundation.Build.Workflow.Activities.SourceAndSymbolServerSettings(True, Nothing)]</this:Process.SourceAndSymbolServerSettings>
  <this:Process.CreateLabel>[True]</this:Process.CreateLabel>
  <this:Process.GetVersion>
    <InArgument x:TypeArguments="x:String"/>
  </this:Process.GetVersion>
  <this:Process.AgentSettings>[New Microsoft.TeamFoundation.Build.Workflow.Activities.AgentSettings() With {.MaxWaitTime = New System.TimeSpan(4, 0, 0), .MaxExecutionTime = New System.TimeSpan(0, 0, 0), .TagComparison = Microsoft.TeamFoundation.Build.Workflow.Activities.TagComparison.MatchExactly }]</this:Process.AgentSettings>
  <this:Process.Verbosity>[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Normal]</this:Process.Verbosity>
  <this:Process.AllowUntrustedCertificates>[True]</this:Process.AllowUntrustedCertificates>
  <this:Process.AllowUpgrade>[True]</this:Process.AllowUpgrade>
  <this:Process.Metadata>
    <mtbw:ProcessParameterMetadataCollection>
      <mtbw:ProcessParameterMetadata BrowsableWhen="EditingDefinition" Category="#100 必須" Required="True" DisplayName="ビルドするソリューション" Description="ビルド、パッケージ、および配置するソリューション。" ParameterName="SolutionToBuild" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="EditingDefinition" Category="#200 基本" DisplayName="ビルドする構成" Description="ビルドする構成。" ParameterName="ConfigurationsToBuild"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="EditingDefinition" Category="#300 詳細設定" DisplayName="マルチプロセッサ環境の MSBuild" Description="可能な場合は、ビルド サーバーで使用可能なすべてのプロセッサを使用し、ソリューションのプロジェクトを並行でビルドするようマルチプロセッサ環境の MSBuild を有効にします。" ParameterName="MSBuildMultiProc"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="EditingDefinition" Category="#300 詳細設定" DisplayName="ソリューション固有のビルド出力" Description="true の場合、ビルド出力はソリューション名に基づいてフォルダーに格納されます。false の場合、すべてのビルド出力が同じフォルダーに格納されます。" ParameterName="SolutionSpecificBuildOutputs"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#400 発行 -- 全般" Description="アプリケーションの配置に使用する配置設定の名前付きセット。" DisplayName="配置設定名" ParameterName="DeploymentEnvironmentName"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#400 発行 -- 全般" Description="true の場合、配置時にルートがない証明書が許可されます。" DisplayName="信頼されていない証明書を許可" ParameterName="AllowUntrustedCertificates"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 発行 -- Azure クラウド サービス" Description="代替発行プロファイルへのソース管理パスを指定します。" DisplayName="代替発行プロファイル" ParameterName="AlternatePublishProfile" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 発行 -- Azure クラウド サービス" Description="代替ストレージ アカウントの名前を指定します。" DisplayName="代替ストレージ アカウント名" ParameterName="AlternateStorageAccountName"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 発行 -- Azure クラウド サービス" Description="クラウド サービス環境を指定します: 運用またはステージング。" DisplayName="代替クラウド サービス環境" ParameterName="AlternateDeploymentSlot"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 発行 -- Azure クラウド サービス" Description="代替配置ラベルを指定します。" DisplayName="代替配置ラベル" ParameterName="AlternateDeploymentLabel"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 発行 -- Azure クラウド サービス" Description="代替クラウド サービス名を指定します。" DisplayName="代替クラウド サービス名" ParameterName="AlternateHostedServiceName"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 発行 -- Azure クラウド サービス" Description="代替サービス構成を指定します。" DisplayName="代替サービス構成" ParameterName="AlternateServiceConfiguration"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 発行 -- Azure クラウド サービス" Description="配置時にアップグレードを許可するかどうかを指定します。" DisplayName="アップグレードを許可" ParameterName="AllowUpgrade"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#600 発行 -- Azure Web サイト" Description="Web 配置発行プロファイルへのソース管理パスを指定します。" DisplayName="Web 配置発行プロファイル" ParameterName="AlternateWebDeployPublishProfile" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls"/>
    </mtbw:ProcessParameterMetadataCollection>
  </this:Process.Metadata>
  <this:Process.SupportedReasons>All</this:Process.SupportedReasons>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
    <Sequence.Variables>
      <Variable x:TypeArguments="mtbc:IBuildDetail" Name="BuildDetail"/>
      <Variable x:TypeArguments="x:String" Name="DropLocation"/>
      <Variable x:TypeArguments="mtbwa:PlatformConfiguration" Name="ConfigurationToBuild"/>
    </Sequence.Variables>
    <mtbwa:GetBuildDetail DisplayName="ビルドの取得" Result="[BuildDetail]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
    <Sequence DisplayName="格納場所の更新" mtbwt:BuildTrackingParticipant.Importance="Low">
      <mtbwa:InvokeForReason DisplayName="開始したビルドのビルド番号の更新" Reason="Triggered">
        <mtbwa:UpdateBuildNumber BuildNumberFormat="[BuildNumberFormat]" DisplayName="ビルド番号の更新"/>
      </mtbwa:InvokeForReason>
      <If Condition="[(Not String.IsNullOrEmpty(BuildDetail.DropLocationRoot)) AndAlso (BuildDetail.Reason And Microsoft.TeamFoundation.Build.Client.BuildReason.Triggered) = BuildDetail.Reason]" DisplayName="ビルドの理由が Triggered の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
            <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="None" Value="[BuildDropProvider.CombinePaths(BuildDetail.DropLocationRoot, BuildDetail.BuildDefinition.Name, BuildDetail.BuildNumber)]" To="[DropLocation]"/>
            <mtbwa:SetBuildProperties DisplayName="格納場所の設定" DropLocation="[DropLocation]" PropertiesToSet="DropLocation" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </Sequence>
        </If.Then>
      </If>
      <If Condition="[(Not String.IsNullOrEmpty(PrivateDropLocation)) AndAlso BuildDetail.Reason = Microsoft.TeamFoundation.Build.Client.BuildReason.ValidateShelveset]" DisplayName="ビルドの理由が ValidateShelveset の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
            <Assign x:TypeArguments="x:String" Value="[BuildDropProvider.CombinePaths(PrivateDropLocation, BuildDetail.BuildDefinition.Name, BuildDetail.BuildNumber)]" To="[DropLocation]" mtbwt:BuildTrackingParticipant.Importance="None"/>
            <mtbwa:SetBuildProperties DisplayName="プライベート ビルドの格納場所の設定" DropLocation="[DropLocation]" PropertiesToSet="DropLocation" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <mtbwa:AgentScope DisplayName="エージェントで実行" MaxExecutionTime="[AgentSettings.MaxExecutionTime]" MaxWaitTime="[AgentSettings.MaxWaitTime]" ReservationSpec="[AgentSettings.GetAgentReservationSpec()]">
      <mtbwa:AgentScope.Variables>
        <Variable x:TypeArguments="mtbc:IBuildAgent" Name="BuildAgent"/>
        <Variable x:TypeArguments="mtvc:Workspace" Name="Workspace"/>
        <Variable x:TypeArguments="x:String" Name="BuildDirectory"/>
        <Variable x:TypeArguments="x:String" Default="[BuildDetail.BuildNumber]" Name="LabelName"/>
        <Variable x:TypeArguments="x:String" Name="WorkspaceName"/>
        <Variable x:TypeArguments="x:String" Name="SourcesDirectory"/>
        <Variable x:TypeArguments="x:String" Name="BinariesDirectory"/>
        <Variable x:TypeArguments="x:String" Name="TestResultsDirectory"/>
      </mtbwa:AgentScope.Variables>
      <Sequence DisplayName="変数の初期化" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:GetBuildAgent DisplayName="エージェントの取得" Result="[BuildAgent]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <mtbwa:GetBuildDirectory DisplayName="ビルド ディレクトリの取得" Result="[BuildDirectory]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <Assign x:TypeArguments="x:String" DisplayName="ワークスペース名の初期化" To="[WorkspaceName]" Value="[String.Format(&quot;{0}_{1}_{2}&quot;, BuildDetail.BuildDefinition.Id, Microsoft.TeamFoundation.LinkingUtilities.DecodeUri(BuildAgent.Uri.AbsoluteUri).ToolSpecificId, BuildAgent.ServiceHost.Name)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <Assign x:TypeArguments="x:String" DisplayName="ソース ディレクトリの初期化" To="[SourcesDirectory]" Value="[String.Format(&quot;{0}\src&quot;, BuildDirectory)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <Assign x:TypeArguments="x:String" DisplayName="バイナリ ディレクトリの初期化" To="[BinariesDirectory]" Value="[String.Format(&quot;{0}\bin&quot;, BuildDirectory)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <Assign x:TypeArguments="x:String" DisplayName="TestResults ディレクトリの初期化" To="[TestResultsDirectory]" Value="[String.Format(&quot;{0}\tst&quot;, BuildDirectory)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <If Condition="[ConfigurationsToBuild.Count = 0]" DisplayName="ConfigurationsToBuild が空の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Assign x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="既定のプラットフォーム構成の使用" To="[ConfigurationToBuild]" Value="[Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfiguration.Default]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </If.Then>
          <If.Else>
            <Assign x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="ユーザーのプラットフォーム構成を使用" To="[ConfigurationToBuild]" Value="[ConfigurationsToBuild(0)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </If.Else>
        </If>
        <If Condition="[WorkspaceName.Length &gt; Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize]" DisplayName="WorkspaceName が MaxSize を超える場合" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
              <mtbwa:WriteBuildWarning DisplayName="ワークスペース サイズ書き込み警告" Message="[String.Format(&quot;ワークスペース名 '{0}' は、許可されている最大文字数 '{1}' を超えています。最大値に合わせて、名前を切り詰めています。&quot;, WorkspaceName, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize)]"/>
              <Assign x:TypeArguments="x:String" DisplayName="WorkspaceName を MaxSize に切り詰める" To="[WorkspaceName]" Value="[WorkspaceName.Substring(0, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize).TrimEnd()]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="ワークスペースの初期化" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:DeleteDirectory Directory="[TestResultsDirectory]" DisplayName="テスト結果ディレクトリの削除" Recursive="[True]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <If Condition="[Not CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.None]" DisplayName="CleanWorkspace が CleanWorkspaceOption.None ではない場合" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="バイナリ ディレクトリの削除" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </If.Then>
        </If>
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" DisplayName="CleanWorkspace が CleanWorkspaceOption.All の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence DisplayName="ワークスペースとソース ディレクトリの削除" mtbwt:BuildTrackingParticipant.Importance="Low">
              <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="ワークスペースの削除" Name="[WorkspaceName]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
              <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="ソース ディレクトリの削除" mtbwt:BuildTrackingParticipant.Importance="Low"/>
            </Sequence>
          </If.Then>
        </If>
        <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="ワークスペースの作成" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]"/>
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.Outputs]" DisplayName="CleanWorkspace が CleanWorkspaceOption.Outputs の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence DisplayName="構成の消去">
              <If Condition="[Not String.IsNullOrEmpty(SolutionToBuild)]" DisplayName="SolutionToBuild が Nothing ではない場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <Sequence DisplayName="プロジェクトの消去" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="localBuildProjectItem"/>
                    </Sequence.Variables>
                    <mtbwa:ConvertWorkspaceItem DisplayName="サーバー パスをローカル パスに変換する" Input="[SolutionToBuild]" Result="[localBuildProjectItem]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                    <If Condition="[System.IO.File.Exists(localBuildProjectItem)]" DisplayName="File.Exists(Project) の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[ConfigurationToBuild.Configuration]" DisplayName="プロジェクトに MSBuild を実行する" GenerateVSPropsFile="[True]" MaxProcesses="[If (MSBuildMultiProc, 0, 1)]" OutDir="[BinariesDirectory]" Platform="[ConfigurationToBuild.Platform]" Project="[localBuildProjectItem]" Targets="[New String() { &quot;Clean&quot; }]" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]"/>
                      </If.Then>
                    </If>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </If.Then>
        </If>
        <mtbwa:SyncWorkspace DisplayName="ワークスペースの取得" VersionOverride="[GetVersion]" Workspace="[Workspace]">
          <mtbwa:SyncWorkspace.RequestsFailed>
            <ActivityAction x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests"/>
              </ActivityAction.Argument>
              <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="再試行要求の設定" Requests="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
            </ActivityAction>
          </mtbwa:SyncWorkspace.RequestsFailed>
        </mtbwa:SyncWorkspace>
      </Sequence>
      <If Condition="[CreateLabel]" DisplayName="CreateLabel の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <mtbwa:InvokeForReason DisplayName="シェルブセット以外のビルドのラベルの作成および設定" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
            <mtbwa:LabelWorkspace Comment="[&quot;Label Created by Team Build&quot;]" DisplayName="ラベルの作成" Name="[LabelName]" Scope="[String.Format(&quot;$/{0}&quot;, BuildDetail.BuildDefinition.TeamProject)]" Workspace="[Workspace]"/>
            <mtbwa:SetBuildProperties DisplayName="BuildDetail のラベルの設定" LabelName="[String.Format(&quot;{0}@$/{1}&quot;, LabelName, BuildDetail.BuildDefinition.TeamProject)]" PropertiesToSet="LabelName" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </mtbwa:InvokeForReason>
        </If.Then>
        <If.Else>
          <mtbwa:WriteBuildMessage DisplayName="書き込みメッセージ" Message="ソースのラベルを作成していません" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]"/>
        </If.Else>
      </If>
      <TryCatch DisplayName="変更セットと作業項目のコンパイル、テスト、および関連付けを試す" mtbwt:BuildTrackingParticipant.Importance="Low">
        <TryCatch.Finally>
          <Sequence DisplayName="ワークスペースを元に戻して格納場所にファイルをコピー" mtbwt:BuildTrackingParticipant.Importance="Low">
            <mtbwa:InvokeForReason DisplayName="シェルブセット ビルド用にワークスペースを元に戻す" Reason="CheckInShelveset, ValidateShelveset">
              <mtbwa:RevertWorkspace DisplayName="ワークスペースを元に戻す" Workspace="[Workspace]"/>
            </mtbwa:InvokeForReason>
            <If Condition="[Not String.IsNullOrEmpty(DropLocation)]" DisplayName="DropLocation が設定されている場合" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <mtbwa:CopyDirectory DisplayName="ファイルを格納場所に格納" Source="[BinariesDirectory]" Destination="[DropLocation]"/>
              </If.Then>
            </If>
          </Sequence>
        </TryCatch.Finally>
        <TryCatch.Try>
          <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:Exception" Name="compilationException"/>
              <Variable x:TypeArguments="scg:IList(mtvc:Changeset)" Name="associatedChangesets"/>
              <Variable x:TypeArguments="s:Boolean" Name="treatTestFailureAsBuildFailure"/>
            </Sequence.Variables>
            <Parallel DisplayName="変更セットと作業項目のコンパイル、テスト、および関連付けを行う">
              <TryCatch DisplayName="コンパイルとテストの試行" mtbwt:BuildTrackingParticipant.Importance="Low">
                <TryCatch.Try>
                  <Sequence DisplayName="コンパイルとテスト">
                    <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="outputDirectory"/>
                        <Variable x:TypeArguments="x:String" Name="logFileDropLocation"/>
                        <Variable x:TypeArguments="mtbc:DeploymentEnvironment" Name="deploymentEnvironment"/>
                        <Variable x:TypeArguments="mtdw:MSDeployProfile" Name="azureWebSiteProfile"/>
                        <Variable x:TypeArguments="mtb:AzureCloudAppProfile" Name="azureCloudAppProfile"/>
                        <Variable x:TypeArguments="x:Boolean" Name="deployOutput" Default="False"/>
                        <Variable x:TypeArguments="x:String" Name="targetSite"/>
                        <Variable x:TypeArguments="x:String" Name="AlternateWebDeployPublishProfileName"/>
                        <Variable x:TypeArguments="x:Boolean" Name="CreateWebDeployPackage" Default="False"/>
                      </Sequence.Variables>
                      <Sequence DisplayName="変数の初期化" mtbwt:BuildTrackingParticipant.Importance="Low">
                        <Assign x:TypeArguments="x:String" DisplayName="OutputDirectory を作成" To="[outputDirectory]" Value="[BinariesDirectory]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                        <If Condition="[Not String.IsNullOrEmpty(DropLocation)]" DisplayName="DropLocation が設定されている場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <If.Then>
                            <Assign x:TypeArguments="x:String" DisplayName="LogFile の格納場所の初期化" To="[logFileDropLocation]" Value="[BuildDropProvider.CombinePaths(DropLocation, &quot;logs&quot;)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                          </If.Then>
                        </If>
                        <If Condition="[Not String.IsNullOrEmpty(DeploymentEnvironmentName)]" DisplayName="DeploymentEnvironmentName が設定されている場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <If.Then>
                            <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                              <mtdwa:GetDeploymentEnvironment DisplayName="配置環境を取得" DeploymentEnvironmentName="[DeploymentEnvironmentName]" Result="[deploymentEnvironment]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                              <Assign x:TypeArguments="x:Boolean" DisplayName="配置出力を True に設定" mtbwt:BuildTrackingParticipant.Importance="Low" Value="True" To="[deployOutput]"/>
                              <If Condition="[deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureWebSite]" DisplayName="DeploymentEnvironment が Azure Web サイトの場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <If.Then>
                                  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                    <mtdwa:GetAzureWebsitePublishProfile DisplayName="Azure Web サイトの発行プロファイルを取得" ConnectedService="[deploymentEnvironment.ConnectedService]" WebsiteEnvironment="[deploymentEnvironment]" AllowUntrustedCertificates="[AllowUntrustedCertificates]" Result="[azureWebSiteProfile]"/>
                                    <Assign x:TypeArguments="x:Boolean" DisplayName="Web 配置パッケージの作成を True に設定" mtbwt:BuildTrackingParticipant.Importance="Low" Value="True" To="[CreateWebDeployPackage]"/>
                                    <!-- The following value is passed to MSBuild for packaging -->
                                    <Assign x:TypeArguments="x:String" DisplayName="ターゲット サイト変数を設定" mtbwt:BuildTrackingParticipant.Importance="Low" Value="[azureWebSiteProfile.MSDeploySite]" To="[targetSite]"/>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateWebDeployPublishProfile)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="代替 Web 配置発行プロファイルを使用する場合">
                                      <If.Then>
                                        <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="localProfile"/>
                                          </Sequence.Variables>
                                          <mtbwa:ConvertWorkspaceItem DisplayName="サーバー パスをローカル パスに変換する" Input="[AlternateWebDeployPublishProfile]" Result="[localProfile]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                          <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="代替 Web 配置発行プロファイル名を記録" To="[AlternateWebDeployPublishProfileName]" Value="[System.IO.Path.GetFileNameWithoutExtension(localProfile)]"/>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <If Condition="[deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureCloudApp]" DisplayName="DeploymentEnvironment が Azure クラウド サービスの場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <If.Then>
                                  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                    <If Condition="[String.IsNullOrEmpty(AlternatePublishProfile)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="既定の発行プロファイルを使用する場合">
                                      <If.Then>
                                        <mtdwa:GetAzureCloudAppPublishProfile DisplayName="既定の Azure クラウド サービス発行プロファイルを取得" CloudAppEnvironment="[deploymentEnvironment]" Result="[azureCloudAppProfile]"/>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="localProfile"/>
                                          </Sequence.Variables>
                                          <mtbwa:ConvertWorkspaceItem DisplayName="サーバー パスをローカル パスに変換する" Input="[AlternatePublishProfile]" Result="[localProfile]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                          <Assign x:TypeArguments="mtb:AzureCloudAppProfile" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="代替発行プロファイルを読み込む" To="[azureCloudAppProfile]" Value="[AzureCloudAppProfile.Parse(System.IO.File.ReadAllText(localProfile))]"/>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateHostedServiceName)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="代替クラウド サービス名が設定されている場合。">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="プロファイルに代替クラウド サービス名を設定します。" To="[azureCloudAppProfile.AzureHostedServiceName]" Value="[AlternateHostedServiceName]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateDeploymentSlot)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="代替配置スロットが設定されている場合。">
                                      <If.Then>
                                        <Assign x:TypeArguments="mtb:AzureDeploymentSlot" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="プロファイルに代替配置スロットを設定します。" To="[azureCloudAppProfile.AzureSlot]" Value="[CType([Enum].Parse(GetType(AzureDeploymentSlot), AlternateDeploymentSlot, True), AzureDeploymentSlot)]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateStorageAccountName)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="代替ストレージ アカウント名が設定されている場合。">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="プロファイルに代替ストレージ アカウント名を設定します。" To="[azureCloudAppProfile.AzureStorageAccountName]" Value="[AlternateStorageAccountName]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateServiceConfiguration)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="代替サービス構成が設定されている場合。">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="プロファイルに代替サービス構成を設定します。" To="[azureCloudAppProfile.AzureServiceConfiguration]" Value="[AlternateServiceConfiguration]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateDeploymentLabel)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="代替配置ラベルが設定されている場合。">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="プロファイルに代替配置ラベルを設定します。" To="[azureCloudAppProfile.AzureDeploymentLabel]" Value="[AlternateDeploymentLabel]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not AllowUpgrade = azureCloudAppProfile.AzureAllowUpgrade]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="アップグレードを許可がオーバーライドされた場合">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:Boolean" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="プロファイルにアップグレードの許可を設定します。" To="[azureCloudAppProfile.AzureAllowUpgrade]" Value="[AllowUpgrade]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[(Not ConfigurationToBuild.IsConfigurationEmpty) AndAlso (Not String.IsNullOrEmpty(azureCloudAppProfile.AzureSolutionConfiguration))]" DisplayName="ビルド構成と Azure プロファイル ソリューション構成が設定されている場合。" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <If.Then>
                                        <If Condition="[Not (String.Compare(ConfigurationToBuild.Configuration, azureCloudAppProfile.AzureSolutionConfiguration, System.Globalization.CultureInfo.InvariantCulture, System.Globalization.CompareOptions.OrdinalIgnoreCase) = 0)]" DisplayName="ビルド構成と Azure プロファイル ソリューション構成が等しくない場合。" mtbwt:BuildTrackingParticipant.Importance="Low">
                                          <If.Then>
                                            <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                              <Assign x:TypeArguments="x:Boolean" DisplayName="配置出力を False に設定" mtbwt:BuildTrackingParticipant.Importance="Low" Value="False" To="[deployOutput]"/>
                                              <mtbwa:WriteBuildMessage DisplayName="書き込みメッセージ" Message="[String.Format(&quot;ビルド構成 {0} と Azure プロファイル ソリューション構成 {1} が一致しないため、このビルドは配置されません。&quot;, ConfigurationToBuild.Configuration, azureCloudAppProfile.AzureSolutionConfiguration)]" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]"/>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <If Condition="[deployOutput]" DisplayName="配置の出力" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <If.Then>
                                  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                    <mtdwa:UpdateDeployment BuildDetail="[BuildDetail]" Stage="[Microsoft.TeamFoundation.Deployment.Workflow.Activities.DeploymentStage.Start]" DeploymentEnvironmentName="[deploymentEnvironment.EnvironmentMetadata.Name]" DisplayName="このビルドに配置が含まれるとしてマーク付け" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                    <If Condition="[deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureCloudApp]" DisplayName="DeploymentEnvironment が Azure クラウド サービスの場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <If.Then>
                                        <mtdwa:UpdateDeployment BuildDetail="[BuildDetail]" Stage="[Microsoft.TeamFoundation.Deployment.Workflow.Activities.DeploymentStage.AddProperty]" PropertyKey="AzureSlot" PropertyValue="[azureCloudAppProfile.AzureSlot.ToString()]" DisplayName="配置に AzureSlot プロパティを追加" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                      <If Condition="[Not String.IsNullOrEmpty(SolutionToBuild)]" DisplayName="SolutionToBuild が Nothing ではない場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                        <If.Then>
                          <TryCatch DisplayName="プロジェクトのコンパイルを試す" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <TryCatch.Try>
                              <Sequence DisplayName="プロジェクトのコンパイル" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="localProject"/>
                                </Sequence.Variables>
                                <mtbwa:ConvertWorkspaceItem DisplayName="サーバー パスをローカル パスに変換する" Input="[SolutionToBuild]" Result="[localProject]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                <If Condition="[(deploymentEnvironment IsNot Nothing) AndAlso (deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureCloudApp)]" DisplayName="配置環境が Azure クラウド サービスの場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <If.Then>
                                    <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="ccprojName"/>
                                      </Sequence.Variables>
                                      <mtdwa:FindCCProjInSln DisplayName="ソリューションで Azure プロジェクトを探す" mtbwt:BuildTrackingParticipant.Importance="Low" SolutionPath="[localProject]" Result="[ccprojName]"/>
                                      <Assign x:TypeArguments="x:String" DisplayName="CSPack をビルドするようプロジェクトを設定" To="[MSBuildArguments]" Value="[String.Format(&quot;/t:{0}:Publish /p:PublishDir={1}/app.publish/ {2}&quot;, ccprojName, outputDirectory, MSBuildArguments)]"/>
                                      <If Condition="[Not String.IsNullOrEmpty(azureCloudAppProfile.AzureServiceConfiguration)]" DisplayName="サービス構成が指定されている場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                        <If.Then>
                                          <Assign x:TypeArguments="x:String" DisplayName="Azure サービス構成を設定" To="[MSBuildArguments]" Value="[String.Format(&quot;/p:TargetProfile={0} {1}&quot;, azureCloudAppProfile.AzureServiceConfiguration, MSBuildArguments)]"/>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                </If>
                                <If Condition="[Not String.IsNullOrEmpty(AlternateWebDeployPublishProfileName) AndAlso (deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureWebSite)]" DisplayName="DeploymentEnvironment が Azure Web サイトの場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <If.Then>
                                    <Assign x:TypeArguments="x:String" DisplayName="Web 配置発行プロファイルを設定" To="[MSBuildArguments]" Value="[String.Format(&quot;/p:WebPublishMethod=Package;PublishProfile=&quot;&quot;{0}&quot;&quot; {1}&quot;, AlternateWebDeployPublishProfileName, MSBuildArguments)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                  </If.Then>
                                </If>
                                <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[ConfigurationToBuild.Configuration]" DisplayName="プロジェクトに MSBuild を実行する" GenerateVSPropsFile="[True]" LogFileDropLocation="[logFileDropLocation]" MaxProcesses="[If (MSBuildMultiProc, 0, 1)]" OutDir="[outputDirectory]" Platform="[ConfigurationToBuild.Platform]" Project="[localProject]" RunCodeAnalysis="[RunCodeAnalysis]" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]" DeployOnBuild="[CreateWebDeployPackage]" DeployIisAppPath="[targetSite]"/>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="ex"/>
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="例外の処理">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests"/>
                                    </Sequence.Variables>
                                    <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" DisplayName="CompilationStatus を Failed に設定する" PropertiesToSet="CompilationStatus" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                    <If Condition="[CreateWorkItem]" DisplayName="CreateWorkItem の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <If.Then>
                                        <mtbwa:InvokeForReason DisplayName="シェルブセット以外のビルドの作業項目の作成" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                                          <mtbwa:OpenWorkItem AssignedTo="[BuildDetail.RequestedFor]" Comment="[&quot;この作業項目は、ビルド失敗時に TFS ビルドによって作成されました。&quot;]" CustomFields="[New Dictionary(Of String, String) From { {&quot;System.Reason&quot;, &quot;ビルド エラー&quot;}, {&quot;Microsoft.VSTS.TCM.ReproSteps&quot;, &quot;TFS ビルドを使用したビルドの開始&quot;}, {&quot;深刻度&quot;, &quot;1 - 致命的&quot;} }]" DisplayName="作業項目の作成" Title="[String.Format(&quot;次のビルドのビルド失敗: {0}&quot;, BuildDetail.BuildNumber)]" Type="[&quot;バグ&quot;]"/>
                                        </mtbwa:InvokeForReason>
                                      </If.Then>
                                    </If>
                                    <mtbwa:GetApprovedRequests DisplayName="チェックインを承認された要求の取得" Result="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="None"/>
                                    <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="再試行要求の設定" Requests="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                    <Rethrow DisplayName="ビルドが停止するように例外を再スローする" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </If.Then>
                      </If>
                      <If Condition="[Not DisableTests]" DisplayName="DisableTests ではない場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                        <If.Then>
                          <Sequence DisplayName="テストの実行" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <If Condition="[Not TestSpecs Is Nothing]" DisplayName="TestSpecs が Nothing ではない場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                              <If.Then>
                                <ForEach x:TypeArguments="mtbwa:TestSpec" DisplayName="TestSpecs 内の各 TestSpec" Values="[TestSpecs]" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <ActivityAction x:TypeArguments="mtbwa:TestSpec">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="mtbwa:TestSpec" Name="spec"/>
                                    </ActivityAction.Argument>
                                    <TryCatch DisplayName="テストの実行を試す" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <TryCatch.Try>
                                        <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec]" DisplayName="spec が AgileTestPlatformSpec の場合" mtbwt:BuildTrackingParticipant.Importance="None">
                                          <If.Then>
                                            <Sequence DisplayName="テスト ソースの Visual Studio テスト ランナーの実行" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="mtbwa:AgileTestPlatformSpec" Name="agileTestPlatformAssembly"/>
                                                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="agileTestPlatformAssemblies"/>
                                              </Sequence.Variables>
                                              <Assign x:TypeArguments="mtbwa:AgileTestPlatformSpec" DisplayName="agileTestPlatformAssembly への spec の割り当て" To="[agileTestPlatformAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                              <mtbwa:FindMatchingFiles DisplayName="Visual Studio テスト プラットフォーム テスト アセンブリの検索" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, outputDirectory, agileTestPlatformAssembly.AssemblyFileSpec)]" Result="[agileTestPlatformAssemblies]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                              <If Condition="[agileTestPlatformAssemblies.Count() &gt; 0]" DisplayName="Visual Studio テスト プラットフォームのテスト アセンブリが見つかった場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                <If.Then>
                                                  <If Condition="[agileTestPlatformAssembly.HasRunSettingsFile]" DisplayName="agileTestPlatformAssembly.HasRunSettingsFile の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                    <If.Then>
                                                      <Sequence DisplayName="実行設定ファイルの検索と Visual Studio テスト ランナーの実行" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="x:String" Name="localRunSettings"/>
                                                        </Sequence.Variables>
                                                        <mtbwa:GenerateRunSettings DisplayName="実行設定ファイルを生成" RunSettingsForTestRun="[agileTestPlatformAssembly.RunSettingsForTestRun]" Result="[localRunSettings]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                        <mtbwa:RunTests DisplayName="テスト ソースの Visual Studio テスト ランナーの実行" RunName="[agileTestPlatformAssembly.RunName]" Flavor="[ConfigurationToBuild.Configuration]" Platform="[ConfigurationToBuild.Platform]" TestSources="[agileTestPlatformAssemblies]" RunSettings="[localRunSettings]" TestCaseFilter="[agileTestPlatformAssembly.TestCaseFilter]" ExecutionPlatform="[agileTestPlatformAssembly.ExecutionPlatform]"/>
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <mtbwa:RunTests DisplayName="テスト ソースの Visual Studio テスト ランナーの実行" RunName="[agileTestPlatformAssembly.RunName]" Flavor="[ConfigurationToBuild.Configuration]" Platform="[ConfigurationToBuild.Platform]" TestSources="[agileTestPlatformAssemblies]" TestCaseFilter="[agileTestPlatformAssembly.TestCaseFilter]" ExecutionPlatform="[agileTestPlatformAssembly.ExecutionPlatform]"/>
                                                    </If.Else>
                                                  </If>
                                                </If.Then>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec]" DisplayName="spec が TestMetadataFileSpec の場合" mtbwt:BuildTrackingParticipant.Importance="None">
                                              <If.Then>
                                                <Sequence DisplayName="メタデータ ファイルの MSTest の実行">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="mtbwa:TestMetadataFileSpec" Name="testMetadataFile"/>
                                                    <Variable x:TypeArguments="x:String" Name="localTestMetadata"/>
                                                  </Sequence.Variables>
                                                  <Assign x:TypeArguments="mtbwa:TestMetadataFileSpec" DisplayName="testMetadataFile に spec を割り当てる" To="[testMetadataFile]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                  <mtbwa:ConvertWorkspaceItem DisplayName="サーバー パスをローカル パスに変換する" Input="[testMetadataFile.MetadataFileName]" Result="[localTestMetadata]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                  <mtbwa:MSTest RunTitle="[testMetadataFile.RunName]" Category="[testMetadataFile.CategoryFilter]" DisplayName="メタデータ ファイルの MSTest の実行" Flavor="[ConfigurationToBuild.Configuration]" MaxPriority="[testMetadataFile.MaximumPriority]" MinPriority="[testMetadataFile.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[ConfigurationToBuild.Platform]" SearchPathRoot="[outputDirectory]" TestLists="[testMetadataFile.TestLists]" TestMetadata="[localTestMetadata]" TestSettings="[String.Empty]" CommandLineArguments="[testMetadataFile.MSTestCommandLineArgs]"/>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="テスト アセンブリの MSTest の実行" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="mtbwa:TestAssemblySpec" Name="testAssembly"/>
                                                    <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="testAssemblies"/>
                                                    <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testFlavor"/>
                                                    <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testPlatform"/>
                                                  </Sequence.Variables>
                                                  <Assign x:TypeArguments="mtbwa:TestAssemblySpec" DisplayName="testAssembly に spec を割り当てる" To="[testAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                  <mtbwa:FindMatchingFiles DisplayName="テスト アセンブリを探す" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, outputDirectory, testAssembly.AssemblyFileSpec)]" Result="[testAssemblies]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                  <If Condition="[testAssemblies.Count() &gt; 0]" DisplayName="テスト アセンブリが見つかった場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                    <If.Then>
                                                      <If Condition="[testAssembly.HasTestSettingsFile]" DisplayName="testAssembly.HasTestSettingsFile の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                        <If.Then>
                                                          <Sequence DisplayName="テストの設定ファイルを探して MSTest を実行" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="localTestSettings"/>
                                                            </Sequence.Variables>
                                                            <mtbwa:ConvertWorkspaceItem DisplayName="サーバー パスをローカル パスに変換する" Input="[testAssembly.TestSettingsFileName]" Result="[localTestSettings]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                            <mtbwa:MSTest RunTitle="[testAssembly.RunName]" Category="[testAssembly.CategoryFilter]" DisplayName="テスト アセンブリの MSTest の実行" Flavor="[ConfigurationToBuild.Configuration]" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[ConfigurationToBuild.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" TestSettings="[localTestSettings]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]"/>
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <mtbwa:MSTest RunTitle="[testAssembly.RunName]" Category="[testAssembly.CategoryFilter]" DisplayName="テスト アセンブリの MSTest の実行" Flavor="[ConfigurationToBuild.Configuration]" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[ConfigurationToBuild.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]"/>
                                                        </If.Else>
                                                      </If>
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception">
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="testException"/>
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="テスト実行例外の処理">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests"/>
                                              </Sequence.Variables>
                                              <If Condition="[Not (TypeOf testException Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestFailureException)]" DisplayName="testException が TestFailureException ではない場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                <If.Then>
                                                  <mtbwa:WriteBuildError DisplayName="書き込みテスト エラー メッセージ" Message="[testException.Message]"/>
                                                </If.Then>
                                              </If>
                                              <mtbwa:SetBuildProperties DisplayName="TestStatus を Failed に設定する" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                              <If Condition="[spec.FailBuildOnFailure]" DisplayName="spec.FailBuildOnFailure の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                <If.Then>
                                                  <Assign x:TypeArguments="s:Boolean" DisplayName="treatTestFailureAsBuildFailure を True に設定する" To="[treatTestFailureAsBuildFailure]" Value="[True]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                </If.Then>
                                              </If>
                                              <mtbwa:GetApprovedRequests DisplayName="チェックインを承認された要求の取得" Result="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="None"/>
                                              <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="再試行要求の設定" Requests="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                            </Sequence>
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                  </ActivityAction>
                                </ForEach>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                      <If Condition="[deployOutput]" DisplayName="配置の出力" mtbwt:BuildTrackingParticipant.Importance="Low">
                        <If.Then>
                          <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="テストが成功したときに配置" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <If.Then>
                              <mtbwa:WriteBuildMessage DisplayName="書き込みメッセージ" Message="テストに失敗したため配置をスキップします。" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]"/>
                            </If.Then>
                            <If.Else>
                              <If Condition="[Not azureWebSiteProfile Is Nothing]" DisplayName="発行の出力">
                                <If.Then>
                                  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                    <mtdwa:MSDeploy DisplayName="MSDeploy" BuildPath="[outputDirectory]" PublishEndpoint="[azureWebSiteProfile.PublishUrl]" TargetSite="[azureWebSiteProfile.MSDeploySite]" UserName="[azureWebSiteProfile.UserName]" Password="[azureWebSiteProfile.UserPWD]" AllowUntrustedCertificates="[AllowUntrustedCertificates]"/>
                                    <mtbwa:WriteCustomSummaryInformation DisplayName="Write Custom Deployment Summary" Message="[String.Format(&quot;Web サイトが配置されました: [{0}]({0})&quot;,azureWebSiteProfile.DestinationAppUrl.ToString())]" SectionDisplayName="配置の概要" SectionKey="customSummarySectionKey" SectionPriority="160"/>
                                    <mtdwa:SetCurrentAzureWebsiteBuildNumber DisplayName="Web サイト ポータルに現在のビルド番号を設定します。" ConnectedService="[deploymentEnvironment.ConnectedService]" AllowUntrustedCertificates="[AllowUntrustedCertificates]" WebsiteEnvironment="[deploymentEnvironment]" mtbwt:BuildTrackingParticipant.Importance="Normal"/>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <If Condition="[deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureCloudApp]" DisplayName="DeploymentEnvironment が Azure クラウド サービス" mtbwt:BuildTrackingParticipant.Importance="Low">
                                    <If.Then>
                                      <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                        <mtdwa:DeployAzureCloudApp DisplayName="アプリケーションを Azure に配置" ConnectedService="[deploymentEnvironment.ConnectedService]" DeploymentProfile="[azureCloudAppProfile]" AllowUntrustedCertificates="[AllowUntrustedCertificates]" BuildPath="[outputDirectory]"/>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </If.Then>
                      </If>
                    </Sequence>
                    <If Condition="[BuildDetail.CompilationStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="CompilationStatus が Unknown の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" DisplayName="CompilationStatus を Succeeded に設定する" PropertiesToSet="CompilationStatus" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                      </If.Then>
                    </If>
                    <If Condition="[BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="TestStatus が Unknown の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:SetBuildProperties DisplayName="TestStatus を Succeeded に設定する" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                      </If.Then>
                    </If>
                    <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="TreatTestFailureAsBuildFailure かつ (TestStatus = Failed) の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:SetBuildProperties DisplayName="Status を Failed に設定する" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                      </If.Then>
                    </If>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception">
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="compilationExceptionArgument"/>
                      </ActivityAction.Argument>
                      <Assign x:TypeArguments="s:Exception" DisplayName="コンパイルの例外の保存" To="[compilationException]" Value="[compilationExceptionArgument]" mtbwt:BuildTrackingParticipant.Importance="None"/>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <If Condition="[AssociateChangesetsAndWorkItems]" DisplayName="AssociateChangesetsAndWorkItems の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <If Condition="[CreateLabel]" DisplayName="CreateLabel および AssociateChangesetsAndWorkItems の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <If.Then>
                      <mtbwa:InvokeForReason DisplayName="シェルブセット以外のビルドの変更セットと作業項目を関連付ける" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                        <mtbwa:AssociateChangesetsAndWorkItems DisplayName="変更セットと作業項目を関連付ける" Result="[associatedChangesets]"/>
                      </mtbwa:InvokeForReason>
                    </If.Then>
                    <If.Else>
                      <mtbwa:WriteBuildWarning DisplayName="変更セットと作業項目の関連付けの書き込み警告" Message="ラベル ソース オプションが False に設定されているため、変更セットと作業項目を関連付けることができません。"/>
                    </If.Else>
                  </If>
                </If.Then>
              </If>
            </Parallel>
            <If Condition="[Not compilationException Is Nothing]" DisplayName="コンパイルの例外が発生した場合" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <Throw DisplayName="コンパイルの例外の再スロー" Exception="[compilationException]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
              </If.Then>
            </If>
            <Parallel DisplayName="影響を受けたテストの取得、ソースのインデックス作成、およびシンボルの発行">
              <If Condition="[PerformTestImpactAnalysis]" DisplayName="PerformTestImpactAnalysis の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <Sequence DisplayName="影響を受けたテストの取得" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="assemblies"/>
                    </Sequence.Variables>
                    <mtbwa:FindMatchingFiles DisplayName="ビルド出力の検索" MatchPattern="[String.Format(&quot;{0}\**\*.dll;{0}\**\*.exe&quot;, BinariesDirectory)]" Result="[assemblies]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                    <mttbb:GetImpactedTests Assemblies="[assemblies]" AssociatedChangesets="[associatedChangesets]" BinariesRoot="[BinariesDirectory]" Build="[BuildDetail]" CodeChanges="{x:Null}" DisplayName="影響を受けたテストの取得" ImpactedTests="{x:Null}" Workspace="[Workspace]"/>
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="SourceAndSymbolServerSettings.IndexSources または SourceAndSymbolServerSettings.HasSymbolStorePath の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:InvokeForReason DisplayName="開始したビルドに対してソースのインデックスを作成し、シンボルを発行する" Reason="Triggered">
                    <mtbwa:InvokeForReason.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="symbolFiles"/>
                    </mtbwa:InvokeForReason.Variables>
                    <mtbwa:FindMatchingFiles DisplayName="シンボル ファイルの検索" MatchPattern="[String.Format(&quot;{0}\**\*.pdb&quot;, BinariesDirectory)]" Result="[symbolFiles]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                    <If Condition="[SourceAndSymbolServerSettings.IndexSources]" DisplayName="SourceAndSymbolServerSettings.IndexSources の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <TryCatch DisplayName="ソースのインデックスの作成の試行" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <TryCatch.Try>
                            <mtbwa:IndexSources DisplayName="ソースのインデックスを作成" FileList="[symbolFiles]"/>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception"/>
                                </ActivityAction.Argument>
                                <mtbwa:WriteBuildError DisplayName="ソースのインデックス作成の書き込みエラー" Message="[exception.Message]"/>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Then>
                    </If>
                    <If Condition="[SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="SourceAndSymbolServerSettings.HasSymbolStorePath の場合" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <TryCatch DisplayName="シンボルの発行の試行" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <TryCatch.Try>
                            <mtbwa:SharedResourceScope DisplayName="シンボル ストアへのアクセスを同期する" MaxExecutionTime="[TimeSpan.Zero]" MaxWaitTime="[New TimeSpan(1, 0, 0)]" ResourceName="[SourceAndSymbolServerSettings.SymbolStorePath]" mtbwt:BuildTrackingParticipant.Importance="Low">
                              <mtbwa:PublishSymbols DisplayName="シンボルの発行" FileList="[symbolFiles]" ProductName="[BuildDetail.BuildDefinition.Name]" StorePath="[SourceAndSymbolServerSettings.SymbolStorePath]" Version="[BuildDetail.BuildNumber]"/>
                            </mtbwa:SharedResourceScope>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception"/>
                                </ActivityAction.Argument>
                                <mtbwa:WriteBuildError DisplayName="シンボル発行の書き込みエラー" Message="[exception.Message]"/>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Then>
                    </If>
                  </mtbwa:InvokeForReason>
                </If.Then>
              </If>
            </Parallel>
          </Sequence>
        </TryCatch.Try>
      </TryCatch>
    </mtbwa:AgentScope>
    <mtbwa:InvokeForReason DisplayName="CheckInShelveset ビルドのゲート変更のチェックイン" Reason="CheckInShelveset">
      <mtbwa:CheckInGatedChanges DisplayName="ゲート変更のチェックイン"/>
    </mtbwa:InvokeForReason>
  </Sequence>
</Activity>
