<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
    <section name="serviceSettings" type="System.Configuration.NameValueFileSectionHandler" restartOnExternalChanges="false" />
  </configSections>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="false" />
    <customErrors mode="Off"/>
  </system.web>

  <serviceSettings>
    <clear />
    <add key="localdb" value="encrypt x" />
    <add key="connectionString" value="metadata=res://*/COMMONDB.csdl|res://*/COMMONDB.ssdl|res://*/COMMONDB.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=192.168.0.101;initial catalog=hakobolicense;persist security info=True;user id=hakobo-net;password=Kyoei7511;MultipleActiveResultSets=True;App=EntityFramework&quot;" />
  </serviceSettings>

  <system.serviceModel>
    <services>
      <service name="WcfServiceHost.KESService">
        <endpoint address="https://localhost/Hakobo/WCFLIB/WcfServiceHost.KESService.svc"
                  binding="wsHttpBinding" contract="WcfServiceHost.IKESService">
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost/Design_Time_Addresses/WcfServiceHost/Service1/" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <bindings>
      <wsHttpBinding>
        <binding receiveTimeout="00:10:00" sendTimeout="00:10:00" openTimeout="00:10:00" closeTimeout="00:10:00"
                 maxReceivedMessageSize="2073741824" maxBufferPoolSize="2073741824" 
                 messageEncoding="Text" textEncoding="utf-8" bypassProxyOnLocal="false" useDefaultWebProxy="true">
          <security mode="Transport">
            <transport clientCredentialType="None" />
            <message  clientCredentialType="None" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- メタデータ情報の開示を避けるには、
          展開する前に下の値を false に設定します -->
          <serviceMetadata httpsGetEnabled="True" />
          <!-- デバッグ目的で障害発生時の例外の詳細を受け取るには、
          下の値を true に設定します。例外情報の開示を避けるには、
          展開する前に false に設定します -->
          <serviceDebug includeExceptionDetailInFaults="True" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <!--WCFサイトを分割すると複雑になるので Falseにしておく-->
    <serviceHostingEnvironment multipleSiteBindingsEnabled="false" />

  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
  </system.webServer>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>

  <log4net>
    <!-- ログ出力の定義 -->
    <!--■注意点■
          Appenderは１つのみとする。
          ログフォルダにあるファイルは全て指定日数経過後の削除対象となるため
          ログ以外を配置しないこと。
    -->
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!-- ログレベルフィルター
          ・各レベルごとに出力するかどうかを指定する。
            AcceptOnMatchがtrue指定されたLevelのログのみが出力される。
          ・すべてのLevelのAcceptOnMatchをfalseにすると、ログは一切出力しない。
      -->
      <filter type="log4net.Filter.LevelMatchFilter">
        <param name="LevelToMatch" value="FATAL" />
        <param name="AcceptOnMatch" value="true" />
      </filter>
      <filter type="log4net.Filter.LevelMatchFilter">
        <param name="LevelToMatch" value="ERROR" />
        <param name="AcceptOnMatch" value="true" />
      </filter>
      <filter type="log4net.Filter.LevelMatchFilter">
        <param name="LevelToMatch" value="WARN" />
        <param name="AcceptOnMatch" value="true" />
      </filter>
      <filter type="log4net.Filter.LevelMatchFilter">
        <param name="LevelToMatch" value="INFO" />
        <param name="AcceptOnMatch" value="true" />
      </filter>
      <filter type="log4net.Filter.LevelMatchFilter">
        <param name="LevelToMatch" value="DEBUG" />
        <param name="AcceptOnMatch" value="true" />
      </filter>
      <!-- ファイルの配置先は相対パスでも絶対パスでも環境変数を使用しても良い。 -->
      <param name="File" value="C:\\KyoeiSystem\\HAKOBO\\Logs\\Log_" />
      <!-- ファイル名は日付毎に切り替えるモードで固定する。日付部分は変更不可 -->
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;" />
      <!-- ファイル名は日付毎に切り替えるモードで固定する。変更不可 -->
      <param name="RollingStyle" value="Date" />
      <!-- ファイル名は可変モード固定。変更不可 -->
      <param name="StaticLogFileName" value="false" />
      <!-- MaxSizeRollBackups を最大バックアップ日数として代用する。
           マイナス値を指定した場合、何も削除されない。
      -->
      <param name="MaxSizeRollBackups" value="30" />
      <!-- 追加モード固定（変更不可） -->
      <param name="AppendToFile" value="true" />
      <!-- 逐次フラッシュする。（実行中に最新のログを取得できるようにする） -->
      <param name="ImmediateFlush" value="true" />
      <!-- ログの書式 -->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d [%3t] %-5p %m%n" />
      </layout>
      <!--<lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock" />-->
    </appender>
    <root>
      <!-- ここではすべてのログレベルを指定し、変更不可とする。
           出力するログレベルの制御は Appender のフィルターで行う。
      -->
      <level value="ALL" />
      <appender-ref ref="LogFileAppender" />
    </root>
  </log4net>

</configuration>